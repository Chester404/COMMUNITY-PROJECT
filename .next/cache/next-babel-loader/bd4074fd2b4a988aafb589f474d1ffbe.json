{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\CommunityProject\\\\cp-fe\\\\pages\\\\auth\\\\signup.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport Layout from \"../../components/Layout\";\nimport Link from \"next/link\";\nimport emailValidation from \"../../utils/emailValidation\";\nimport phoneValidation from \"../../utils/phoneValidation\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nconst Signup = () => {\n  let data;\n  const {\n    0: validated,\n    1: setValidated\n  } = useState(false);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: phoneNumber,\n    1: setPhoneNumber\n  } = useState(\"\");\n  const {\n    0: emailValidity,\n    1: setEmailValidity\n  } = useState(\"invalid\");\n  const {\n    0: phoneValidity,\n    1: setPhoneValidity\n  } = useState(\"invalid\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState(\"mismatch\");\n  const {\n    0: passwordFieldValidity,\n    1: setPasswordFieldValidity\n  } = useState(\"invalid\");\n  const {\n    0: userType,\n    1: setUserType\n  } = useState(\"Organization\");\n  const {\n    0: isSent,\n    1: setIsSent\n  } = useState(false);\n  const {\n    0: passwordShown,\n    1: setPasswordShown\n  } = useState(false);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: userName,\n    1: setUserName\n  } = useState(\"\");\n  const {\n    0: firstName,\n    1: setFirstName\n  } = useState(\"\");\n  const {\n    0: lastName,\n    1: setLastName\n  } = useState(\"\"); // const [loading, setLoading] = useState(false);\n  // const [promptBody, setPromptBody] = useState(\"\");\n  // const [linkTo, setLinkTo] = useState(null);\n  // const [linkText, setLinkText] = useState(null);\n\n  const {\n    0: statusColor,\n    1: setStatusColor\n  } = useState(\"blue\");\n  const {\n    0: status,\n    1: setStatus\n  } = useState(\"\");\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false); // Toggle Password Visibility\n\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const loader = () => __jsx(\"span\", {\n    className: \"spinner-border spinner-border-sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    style: {\n      width: \"1.5rem\",\n      height: \"1.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }); // Email Phone Validation\n\n\n  const validateEmail = e => {\n    if (emailValidation(e.target.value)) {\n      setEmail(e.target.value);\n      setEmailValidity(\"valid\");\n    } else {\n      setEmailValidity(\"invalid\");\n    }\n  };\n\n  const validatePhone = e => {\n    if (phoneValidation(e.target.value)) {\n      setPhoneNumber(e.target.value);\n      setPhoneValidity(\"valid\");\n    } else {\n      setPhoneValidity(\"invalid\");\n    }\n  }; // Password Validation\n\n\n  const validatePassword = e => {\n    if (e.target.value.match(/[a-z]/g) && e.target.value.match(/[A-Z]/g) && e.target.value.match(/[0-9]/g) && e.target.value.match(/[^a-zA-Z\\d]/g) && e.target.value.length >= 8) {\n      // res = \"TRUE\";\n      setPassword(e.target.value);\n      setPasswordFieldValidity(\"valid\");\n    } // return true\n    // set field to invalid\n    else {\n        // console.log(\"invalid password\")\n        setPasswordFieldValidity(\"invalid\");\n      }\n  };\n\n  const confirmPasswordMatch = e => {\n    if (e.target.value === password) {\n      setConfirmPassword(\"match\"); // data.first_name = firstName\n      // data.last_name = lastName\n      // data.email = email\n      // data.password = password\n      // data.phone_number = phoneNumber\n      // data.user_type = userType\n    } else {\n      setConfirmPassword(\"mismatch\");\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault(); //   setLoading(true);\n\n    console.log(\"Status\");\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n\n    if (email && password === confirmPassword) {\n      setStatusColor(\"blue\");\n      setStatus(\"Please wait...\");\n\n      try {\n        const result = await axios.post(\"http://51.116.114.155:8080/auth/registration/\", {\n          email: email,\n          password: password,\n          first_name: firstName,\n          last_name: lastName,\n          phone_number: phoneNumber\n        });\n\n        if (result) {\n          // setLoading(false);\n          console.log(\"RESULT:\", result);\n\n          if (result.status === 200 || result.statusText === \"Created\") {\n            // go to landing page\n            setStatusColor(\"blue\");\n            setStatus(\"A confirmation has been sent to your email. Please retrieve the code and confirm acount\"); //   setPromptBody(\n            //     \"A confirmation has been sent to your email. Please retrieve the code and confirm acount\"\n            //   );\n            //   setLinkTo(\"confirmaccount\");\n            //   setLinkText(\"Confirm Account\");\n            //   setShow(true);\n            //   setLoading(false);\n          }\n        }\n      } catch (err) {\n        console.log(err.message);\n\n        if (err.message === \"Request failed with status code 400\") {\n          // setPromptBody(\"User with this email already exists\");\n          // setLinkText(null);\n          // setLinkTo(null);\n          // setShow(true);\n          // setLoading(false);\n          setStatusColor(\"red\");\n          setStatus(\"User with this email already exists\");\n        } else if (err.message === \"Request failed with status code 404\") {\n          // bad endpoint\n          setStatusColor(\"red\");\n          setStatus(\"An error occured\");\n        } else if (err.message === \"Network Error\") {\n          setStatusColor(\"red\");\n          setStatus(\"Please check your network connection and try again.\"); // bad network connection\n          // setPromptBody(\n          //   \"Please check your network connection and try again.\"\n          // );\n          // setShow(true);\n          // setLoading(false);\n        }\n      }\n    } else {\n      setStatusColor(\"red\");\n      setStatus(\"Password mismatch\");\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"/auth.css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/Logo.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, \"Make the most out of your business\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, \"Already on Market Circle?\", \" \", __jsx(Link, {\n    href: \"/auth/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, \"Log in\"))))), \" \", __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    style: {\n      width: \"100%\"\n    },\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, \"Email address / Phone\"), __jsx(\"input\", {\n    type: \"email\",\n    className: \"form-control cinput\",\n    id: \"email\",\n    \"aria-describedby\": \"emailHelp\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    type: \"password\",\n    className: \"form-control cinput\",\n    id: \"password\",\n    placeholder: \"Password\",\n    \"data-toggle\": \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"confirm_password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, \"Confirm Password\"), __jsx(\"input\", {\n    type: \"password\",\n    className: \"form-control cinput\",\n    id: \"confirm_password\",\n    placeholder: \"Password\",\n    \"data-toggle\": \"password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"organization\",\n    name: \"account_type\",\n    value: \"organization\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }), \" \", __jsx(\"label\", {\n    htmlFor: \"organization\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, \"Organization\"), \" \", __jsx(\"input\", {\n    type: \"radio\",\n    id: \"individual\",\n    name: \"account_type\",\n    value: \"individual\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }), \" \", __jsx(\"label\", {\n    htmlFor: \"individual\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, \"Individual\")), __jsx(\"div\", {\n    className: \"form-group col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block submitbutton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, \"Sign Up\")), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      color: statusColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, \"\\xA0\", status), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, \"By clicking Sing up, you agree to the Market Circle\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }), __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }, \"User Agreement,\"), __jsx(\"a\", {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }, \"Privacy Policy\")), \" \", \"and\", \" \", __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 15\n    }\n  }, \"Cookie Policy\"))))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/user/Documents/CommunityProject/cp-fe/pages/auth/signup.tsx"],"names":["Head","Layout","Link","emailValidation","phoneValidation","axios","useState","Signup","data","validated","setValidated","email","setEmail","phoneNumber","setPhoneNumber","emailValidity","setEmailValidity","phoneValidity","setPhoneValidity","password","setPassword","confirmPassword","setConfirmPassword","passwordFieldValidity","setPasswordFieldValidity","userType","setUserType","isSent","setIsSent","passwordShown","setPasswordShown","show","setShow","userName","setUserName","firstName","setFirstName","lastName","setLastName","statusColor","setStatusColor","status","setStatus","handleShow","handleClose","togglePasswordVisiblity","loader","width","height","validateEmail","e","target","value","validatePhone","validatePassword","match","length","confirmPasswordMatch","handleSubmit","event","preventDefault","console","log","form","currentTarget","checkValidity","stopPropagation","result","post","first_name","last_name","phone_number","statusText","err","message","textAlign","color"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Link from \"next/link\";\r\nimport emailValidation from \"../../utils/emailValidation\";\r\nimport phoneValidation from \"../../utils/phoneValidation\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nconst Signup = () => {\r\n  let data: any;\r\n  const [validated, setValidated] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [emailValidity, setEmailValidity] = useState(\"invalid\");\r\n  const [phoneValidity, setPhoneValidity] = useState(\"invalid\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"mismatch\");\r\n  const [passwordFieldValidity, setPasswordFieldValidity] = useState(\"invalid\");\r\n  const [userType, setUserType] = useState(\"Organization\");\r\n  const [isSent, setIsSent] = useState(false);\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  // const [loading, setLoading] = useState(false);\r\n  // const [promptBody, setPromptBody] = useState(\"\");\r\n  // const [linkTo, setLinkTo] = useState(null);\r\n  // const [linkText, setLinkText] = useState(null);\r\n  const [statusColor, setStatusColor] = useState(\"blue\");\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  const handleShow = () => setShow(true);\r\n  const handleClose = () => setShow(false);\r\n\r\n  // Toggle Password Visibility\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n\r\n  const loader = () => (\r\n    <span\r\n      className=\"spinner-border spinner-border-sm\"\r\n      role=\"status\"\r\n      aria-hidden=\"true\"\r\n      style={{ width: \"1.5rem\", height: \"1.5rem\" }}\r\n    ></span>\r\n  );\r\n\r\n  // Email Phone Validation\r\n  const validateEmail = (e) => {\r\n    if (emailValidation(e.target.value)) {\r\n      setEmail(e.target.value);\r\n      setEmailValidity(\"valid\");\r\n    } else {\r\n      setEmailValidity(\"invalid\");\r\n    }\r\n  };\r\n\r\n  const validatePhone = (e) => {\r\n    if (phoneValidation(e.target.value)) {\r\n      setPhoneNumber(e.target.value);\r\n      setPhoneValidity(\"valid\");\r\n    } else {\r\n      setPhoneValidity(\"invalid\");\r\n    }\r\n  };\r\n\r\n  // Password Validation\r\n  const validatePassword = (e) => {\r\n    if (\r\n      e.target.value.match(/[a-z]/g) &&\r\n      e.target.value.match(/[A-Z]/g) &&\r\n      e.target.value.match(/[0-9]/g) &&\r\n      e.target.value.match(/[^a-zA-Z\\d]/g) &&\r\n      e.target.value.length >= 8\r\n    ) {\r\n      // res = \"TRUE\";\r\n      setPassword(e.target.value);\r\n      setPasswordFieldValidity(\"valid\");\r\n    }\r\n    // return true\r\n    // set field to invalid\r\n    else {\r\n      // console.log(\"invalid password\")\r\n      setPasswordFieldValidity(\"invalid\");\r\n    }\r\n  };\r\n\r\n  const confirmPasswordMatch = (e) => {\r\n    if (e.target.value === password) {\r\n      setConfirmPassword(\"match\");\r\n      // data.first_name = firstName\r\n      // data.last_name = lastName\r\n      // data.email = email\r\n      // data.password = password\r\n      // data.phone_number = phoneNumber\r\n      // data.user_type = userType\r\n    } else {\r\n      setConfirmPassword(\"mismatch\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    //   setLoading(true);\r\n    console.log(\"Status\");\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n    }\r\n\r\n    if (email && password === confirmPassword) {\r\n      setStatusColor(\"blue\");\r\n      setStatus(\"Please wait...\");\r\n      try {\r\n        const result = await axios.post(\r\n          \"http://51.116.114.155:8080/auth/registration/\",\r\n          {\r\n            email: email,\r\n            password: password,\r\n            first_name: firstName,\r\n            last_name: lastName,\r\n            phone_number: phoneNumber,\r\n          }\r\n        );\r\n\r\n        if (result) {\r\n          // setLoading(false);\r\n          console.log(\"RESULT:\", result);\r\n          if (result.status === 200 || result.statusText === \"Created\") {\r\n            // go to landing page\r\n            setStatusColor(\"blue\");\r\n            setStatus(\r\n              \"A confirmation has been sent to your email. Please retrieve the code and confirm acount\"\r\n            );\r\n            //   setPromptBody(\r\n            //     \"A confirmation has been sent to your email. Please retrieve the code and confirm acount\"\r\n            //   );\r\n            //   setLinkTo(\"confirmaccount\");\r\n            //   setLinkText(\"Confirm Account\");\r\n            //   setShow(true);\r\n            //   setLoading(false);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err.message);\r\n        if (err.message === \"Request failed with status code 400\") {\r\n          // setPromptBody(\"User with this email already exists\");\r\n          // setLinkText(null);\r\n          // setLinkTo(null);\r\n          // setShow(true);\r\n          // setLoading(false);\r\n          setStatusColor(\"red\");\r\n          setStatus(\"User with this email already exists\");\r\n        } else if (err.message === \"Request failed with status code 404\") {\r\n          // bad endpoint\r\n          setStatusColor(\"red\");\r\n          setStatus(\"An error occured\");\r\n        } else if (err.message === \"Network Error\") {\r\n          setStatusColor(\"red\");\r\n          setStatus(\"Please check your network connection and try again.\");\r\n          // bad network connection\r\n          // setPromptBody(\r\n          //   \"Please check your network connection and try again.\"\r\n          // );\r\n          // setShow(true);\r\n          // setLoading(false);\r\n        }\r\n      }\r\n    } else {\r\n      setStatusColor(\"red\");\r\n      setStatus(\"Password mismatch\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Head>\r\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"/auth.css\" />\r\n      </Head>\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <div>\r\n          <img src=\"/images/Logo.png\" />\r\n        </div>\r\n        <div>\r\n          <b>Make the most out of your business</b>\r\n        </div>\r\n        <div>\r\n          Already on Market Circle?{\" \"}\r\n          <Link href=\"/auth/login\">\r\n            <a>\r\n              <b>Log in</b>\r\n            </a>\r\n          </Link>\r\n        </div>\r\n      </div>{\" \"}\r\n      <div className=\"row\">\r\n        <form style={{ width: \"100%\" }} onSubmit={handleSubmit}>\r\n          {/* <div className=\"form-group col-12\">\r\n            <label htmlFor=\"firstname\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control cinput\"\r\n              id=\"firstname\"\r\n              placeholder=\"First Name\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-12\">\r\n            <label htmlFor=\"lastname\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control cinput\"\r\n              id=\"lastname\"\r\n              placeholder=\"Last Name\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-12\">\r\n            <label htmlFor=\"phone_number\">Phone Number</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control cinput\"\r\n              id=\"phone_number\"\r\n              placeholder=\"Phone Number\"\r\n              value={phoneNumber}\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n            />\r\n          </div> */}\r\n          <div className=\"form-group col-12\">\r\n            <label htmlFor=\"email\">Email address / Phone</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control cinput\"\r\n              id=\"email\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-12\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control cinput\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              data-toggle=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-12\">\r\n            <label htmlFor=\"confirm_password\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control cinput\"\r\n              id=\"confirm_password\"\r\n              placeholder=\"Password\"\r\n              data-toggle=\"password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-12\">\r\n            <input\r\n              type=\"radio\"\r\n              id=\"organization\"\r\n              name=\"account_type\"\r\n              value=\"organization\"\r\n            />{\" \"}\r\n            <label htmlFor=\"organization\">Organization</label>{\" \"}\r\n            <input\r\n              type=\"radio\"\r\n              id=\"individual\"\r\n              name=\"account_type\"\r\n              value=\"individual\"\r\n            />{\" \"}\r\n            <label htmlFor=\"individual\">Individual</label>\r\n          </div>\r\n          <div className=\"form-group col-12\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-block submitbutton\"\r\n            >\r\n              Sign Up\r\n            </button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: statusColor,\r\n            }}\r\n          >\r\n            &nbsp;{status}\r\n          </div>\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            By clicking Sing up, you agree to the Market Circle\r\n            <br />\r\n            <b>\r\n              <a href=\"\">User Agreement,</a>\r\n              <a href=\"\">Privacy Policy</a>\r\n            </b>{\" \"}\r\n            and{\" \"}\r\n            <b>\r\n              <a href=\"\">Cookie Policy</a>\r\n            </b>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}