{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport ufetch from \"../ufetch\";\nimport axios from \"axios\";\nexport class Users {\n  async signup(params) {\n    const query_params = new URLSearchParams(params).toString();\n    return await ufetch(\"/register\", {\n      method: \"POST\",\n      body: query_params\n    });\n  }\n\n  async confirmaccount(integer_key) {\n    const rs = await axios.post(\"http://51.116.114.155:8080/auth/keyinput/\", {\n      integer_key\n    });\n    return rs;\n  }\n\n  async getUserProfile() {\n    //accounts/signed_in_user\n    return this.generic_query({\n      method: \"GET\",\n      query_params: \"/accounts/signed_in_user\"\n    });\n  }\n\n  async login(authentication_property, password) {\n    //authentication_property: email or phone number for login\n    const rs = await axios.post(\"http://51.116.114.155:8080/auth/token\", {\n      authentication_property: authentication_property,\n      password: password // authentication_property: \"ogembodennis@gmail.com\",\n      // password: \"@Beloved2020\",\n\n    });\n    return rs; // const data = new URLSearchParams({\n    //   authentication_property,\n    //   password,\n    // }).toString();\n    // return await ufetch(\"/auth/token\", {\n    //   method: \"POST\",\n    //   body: data,\n    // });\n  }\n\n  async forgotpassword(authentication_property) {\n    const data = new URLSearchParams(authentication_property).toString();\n    return await ufetch(\"/auth/password-forgotten\", {\n      method: \"POST\",\n      body: data\n    });\n  }\n\n  async updateUserProfile(userData) {\n    const data = new URLSearchParams(userData).toString();\n    return await ufetch(\"accounts/update\", {\n      method: \"PUT\",\n      body: data\n    });\n  }\n\n  async generic_query(ctx) {\n    return await ufetch(`/${ctx.endpoint}/${ctx.query_params}`, _objectSpread({\n      method: ctx.method\n    }, ctx.options));\n  }\n\n}","map":{"version":3,"sources":["/home/james/Documents/dev/cp-fe/lib/endpoints/users.ts"],"names":["ufetch","axios","Users","signup","params","query_params","URLSearchParams","toString","method","body","confirmaccount","integer_key","rs","post","getUserProfile","generic_query","login","authentication_property","password","forgotpassword","data","updateUserProfile","userData","ctx","endpoint","options"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAN,CAAY;AACjB,QAAMC,MAAN,CAAaC,MAAb,EAA0B;AACxB,UAAMC,YAAY,GAAG,IAAIC,eAAJ,CAAoBF,MAApB,EAAmCG,QAAnC,EAArB;AACA,WAAO,MAAMP,MAAM,CAAC,WAAD,EAAc;AAC/BQ,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,IAAI,EAAEJ;AAFyB,KAAd,CAAnB;AAID;;AAED,QAAMK,cAAN,CAAqBC,WAArB,EAA0C;AACxC,UAAMC,EAAE,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW,2CAAX,EAAwD;AACvEF,MAAAA;AADuE,KAAxD,CAAjB;AAIA,WAAOC,EAAP;AACD;;AAED,QAAME,cAAN,GAAuB;AACrB;AACA,WAAO,KAAKC,aAAL,CAAmB;AACxBP,MAAAA,MAAM,EAAE,KADgB;AAExBH,MAAAA,YAAY,EAAE;AAFU,KAAnB,CAAP;AAID;;AACD,QAAMW,KAAN,CAAYC,uBAAZ,EAA6CC,QAA7C,EAA+D;AAC7D;AACA,UAAMN,EAAE,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW,uCAAX,EAAoD;AACnEI,MAAAA,uBAAuB,EAAEA,uBAD0C;AAEnEC,MAAAA,QAAQ,EAAEA,QAFyD,CAGnE;AACA;;AAJmE,KAApD,CAAjB;AAOA,WAAON,EAAP,CAT6D,CAU7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,QAAMO,cAAN,CAAqBF,uBAArB,EAAsD;AACpD,UAAMG,IAAI,GAAG,IAAId,eAAJ,CAAoBW,uBAApB,EAA6CV,QAA7C,EAAb;AACA,WAAO,MAAMP,MAAM,CAAC,0BAAD,EAA6B;AAC9CQ,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,IAAI,EAAEW;AAFwC,KAA7B,CAAnB;AAID;;AAED,QAAMC,iBAAN,CAAwBC,QAAxB,EAAuC;AACrC,UAAMF,IAAI,GAAG,IAAId,eAAJ,CAAoBgB,QAApB,EAA8Bf,QAA9B,EAAb;AACA,WAAO,MAAMP,MAAM,CAAC,iBAAD,EAAoB;AACrCQ,MAAAA,MAAM,EAAE,KAD6B;AAErCC,MAAAA,IAAI,EAAEW;AAF+B,KAApB,CAAnB;AAID;;AAED,QAAgBL,aAAhB,CAA8BQ,GAA9B,EAAwC;AACtC,WAAO,MAAMvB,MAAM,CAAE,IAAGuB,GAAG,CAACC,QAAS,IAAGD,GAAG,CAAClB,YAAa,EAAtC;AACjBG,MAAAA,MAAM,EAAEe,GAAG,CAACf;AADK,OAEde,GAAG,CAACE,OAFU,EAAnB;AAID;;AAjEgB","sourcesContent":["import ufetch from \"../ufetch\";\nimport axios from \"axios\";\n\nexport class Users {\n  async signup(params: any) {\n    const query_params = new URLSearchParams(params as any).toString();\n    return await ufetch(\"/register\", {\n      method: \"POST\",\n      body: query_params,\n    });\n  }\n\n  async confirmaccount(integer_key: number) {\n    const rs = await axios.post(\"http://51.116.114.155:8080/auth/keyinput/\", {\n      integer_key,\n    });\n\n    return rs;\n  }\n\n  async getUserProfile() {\n    //accounts/signed_in_user\n    return this.generic_query({\n      method: \"GET\",\n      query_params: \"/accounts/signed_in_user\",\n    });\n  }\n  async login(authentication_property: string, password: string) {\n    //authentication_property: email or phone number for login\n    const rs = await axios.post(\"http://51.116.114.155:8080/auth/token\", {\n      authentication_property: authentication_property,\n      password: password,\n      // authentication_property: \"ogembodennis@gmail.com\",\n      // password: \"@Beloved2020\",\n    });\n\n    return rs;\n    // const data = new URLSearchParams({\n    //   authentication_property,\n    //   password,\n    // }).toString();\n    // return await ufetch(\"/auth/token\", {\n    //   method: \"POST\",\n    //   body: data,\n    // });\n  }\n\n  async forgotpassword(authentication_property: string) {\n    const data = new URLSearchParams(authentication_property).toString();\n    return await ufetch(\"/auth/password-forgotten\", {\n      method: \"POST\",\n      body: data,\n    });\n  }\n\n  async updateUserProfile(userData: any) {\n    const data = new URLSearchParams(userData).toString();\n    return await ufetch(\"accounts/update\", {\n      method: \"PUT\",\n      body: data,\n    });\n  }\n\n  protected async generic_query(ctx: any) {\n    return await ufetch(`/${ctx.endpoint}/${ctx.query_params}`, {\n      method: ctx.method,\n      ...ctx.options,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}