{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar ufetch = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(endpoint) {\n    var options,\n        api_url,\n        l_storage,\n        headers,\n        h,\n        results,\n        dbugText,\n        data,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            api_url = process.env.URL;\n            l_storage = localStorage.getItem(\"cp-a\");\n            headers = {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\"\n            };\n\n            if (l_storage) {\n              l_storage = JSON.parse(l_storage);\n              headers[\"Authorization\"] = \"Bearer \".concat(l_storage.access);\n            }\n\n            if (options !== undefined) {\n              if (options.headers) {\n                for (h in options.headers) {\n                  headers[h] = options.headers[h];\n                }\n              }\n            }\n\n            options.headers = headers;\n            results = null;\n            dbugText = null;\n            data = null;\n            _context.prev = 10;\n            _context.next = 13;\n            return fetch(\"\".concat(api_url).concat(endpoint), options);\n\n          case 13:\n            results = _context.sent;\n            _context.next = 16;\n            return results.text();\n\n          case 16:\n            dbugText = _context.sent;\n            _context.prev = 17;\n            // console.log(dbugText);\n            data = JSON.parse(dbugText);\n            _context.next = 24;\n            break;\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](17);\n            return _context.abrupt(\"return\", {\n              error: dbugText\n            });\n\n          case 24:\n            if (data.error) {}\n\n            return _context.abrupt(\"return\", data);\n\n          case 28:\n            _context.prev = 28;\n            _context.t1 = _context[\"catch\"](10);\n            return _context.abrupt(\"return\", {\n              error: _context.t1.message\n            });\n\n          case 31:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[10, 28], [17, 21]]);\n  }));\n\n  return function ufetch(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var refreshTOken = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(l_storage) {\n    var response, responseData;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch(\"/token/refresh/\", {\n              method: \"post\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\"\n              },\n              body: JSON.stringify({\n                refresh: l_storage.refresh\n              })\n            });\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return response.text();\n\n          case 6:\n            responseData = _context2.sent;\n            return _context2.abrupt(\"return\", JSON.parse(responseData));\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", {\n              error: _context2.t0.message\n            });\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 10]]);\n  }));\n\n  return function refreshTOken(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport default ufetch;","map":{"version":3,"sources":["C:/wamp64/www/cp-fe/lib/ufetch.js"],"names":["ufetch","endpoint","options","api_url","process","env","URL","l_storage","localStorage","getItem","headers","Accept","JSON","parse","access","undefined","h","results","dbugText","data","fetch","text","error","message","refreshTOken","method","body","stringify","refresh","response","responseData"],"mappings":";;;AAAA,IAAMA,MAAM;AAAA,sEAAG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,YAAAA,OAAjB,2DAA2B,EAA3B;AACPC,YAAAA,OADO,GACGC,OAAO,CAACC,GAAR,CAAYC,GADf;AAETC,YAAAA,SAFS,GAEGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAFH;AAGPC,YAAAA,OAHO,GAGG;AACd,8BAAgB,kBADF;AAEdC,cAAAA,MAAM,EAAE;AAFM,aAHH;;AAQb,gBAAIJ,SAAJ,EAAe;AACbA,cAAAA,SAAS,GAAGK,IAAI,CAACC,KAAL,CAAWN,SAAX,CAAZ;AACAG,cAAAA,OAAO,CAAC,eAAD,CAAP,oBAAqCH,SAAS,CAACO,MAA/C;AACD;;AAED,gBAAIZ,OAAO,KAAKa,SAAhB,EAA2B;AACzB,kBAAIb,OAAO,CAACQ,OAAZ,EAAqB;AACnB,qBAASM,CAAT,IAAcd,OAAO,CAACQ,OAAtB,EAA+B;AAC7BA,kBAAAA,OAAO,CAACM,CAAD,CAAP,GAAad,OAAO,CAACQ,OAAR,CAAgBM,CAAhB,CAAb;AACD;AACF;AACF;;AACDd,YAAAA,OAAO,CAACQ,OAAR,GAAkBA,OAAlB;AAEIO,YAAAA,OAtBS,GAsBC,IAtBD;AAuBTC,YAAAA,QAvBS,GAuBE,IAvBF;AAwBTC,YAAAA,IAxBS,GAwBF,IAxBE;AAAA;AAAA;AAAA,mBA2BKC,KAAK,WAAIjB,OAAJ,SAAcF,QAAd,GAA0BC,OAA1B,CA3BV;;AAAA;AA2BXe,YAAAA,OA3BW;AAAA;AAAA,mBA4BMA,OAAO,CAACI,IAAR,EA5BN;;AAAA;AA4BXH,YAAAA,QA5BW;AAAA;AA8BT;AACAC,YAAAA,IAAI,GAAGP,IAAI,CAACC,KAAL,CAAWK,QAAX,CAAP;AA/BS;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAiCF;AAAEI,cAAAA,KAAK,EAAEJ;AAAT,aAjCE;;AAAA;AAmCX,gBAAIC,IAAI,CAACG,KAAT,EAAgB,CACf;;AApCU,6CAqCJH,IArCI;;AAAA;AAAA;AAAA;AAAA,6CAuCJ;AAAEG,cAAAA,KAAK,EAAE,YAAEC;AAAX,aAvCI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANvB,MAAM;AAAA;AAAA;AAAA,GAAZ;;AA2CA,OAAO,IAAMwB,YAAY;AAAA,uEAAG,kBAAOjB,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEHa,KAAK,CAAC,iBAAD,EAAoB;AAC5CK,cAAAA,MAAM,EAAE,MADoC;AAE5Cf,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEPC,gBAAAA,MAAM,EAAE;AAFD,eAFmC;AAM5Ce,cAAAA,IAAI,EAAEd,IAAI,CAACe,SAAL,CAAe;AAAEC,gBAAAA,OAAO,EAAErB,SAAS,CAACqB;AAArB,eAAf;AANsC,aAApB,CAFF;;AAAA;AAEpBC,YAAAA,QAFoB;AAAA;AAAA,mBAUCA,QAAQ,CAACR,IAAT,EAVD;;AAAA;AAUpBS,YAAAA,YAVoB;AAAA,8CAYjBlB,IAAI,CAACC,KAAL,CAAWiB,YAAX,CAZiB;;AAAA;AAAA;AAAA;AAAA,8CAcjB;AAAER,cAAAA,KAAK,EAAE,aAAEC;AAAX,aAdiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZC,YAAY;AAAA;AAAA;AAAA,GAAlB;AAiBP,eAAexB,MAAf","sourcesContent":["const ufetch = async (endpoint, options = {}) => {\r\n  const api_url = process.env.URL;\r\n  let l_storage = localStorage.getItem(\"cp-a\");\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    Accept: \"application/json\",\r\n  };\r\n\r\n  if (l_storage) {\r\n    l_storage = JSON.parse(l_storage);\r\n    headers[\"Authorization\"] = `Bearer ${l_storage.access}`;\r\n  }\r\n\r\n  if (options !== undefined) {\r\n    if (options.headers) {\r\n      for (let h in options.headers) {\r\n        headers[h] = options.headers[h];\r\n      }\r\n    }\r\n  }\r\n  options.headers = headers;\r\n\r\n  let results = null;\r\n  let dbugText = null;\r\n  let data = null;\r\n\r\n  try {\r\n    results = await fetch(`${api_url}${endpoint}`, options);\r\n    dbugText = await results.text();\r\n    try {\r\n      // console.log(dbugText);\r\n      data = JSON.parse(dbugText);\r\n    } catch (e) {\r\n      return { error: dbugText };\r\n    }\r\n    if (data.error) {\r\n    }\r\n    return data;\r\n  } catch (e) {\r\n    return { error: e.message };\r\n  }\r\n};\r\n\r\nexport const refreshTOken = async (l_storage) => {\r\n  try {\r\n    let response = await fetch(\"/token/refresh/\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify({ refresh: l_storage.refresh }),\r\n    });\r\n    let responseData = await response.text();\r\n\r\n    return JSON.parse(responseData);\r\n  } catch (e) {\r\n    return { error: e.message };\r\n  }\r\n};\r\nexport default ufetch;\r\n"]},"metadata":{},"sourceType":"module"}