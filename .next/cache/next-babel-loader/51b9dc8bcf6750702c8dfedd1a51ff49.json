{"ast":null,"code":"const ufetch = async (endpoint, options = {}) => {\n  const api_url = process.env.URL;\n  let l_storage = localStorage.getItem(\"cp-a\");\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  };\n\n  if (l_storage) {\n    l_storage = JSON.parse(l_storage);\n    headers[\"Authorization\"] = `Bearer ${l_storage.access}`;\n  }\n\n  if (options !== undefined) {\n    if (options.headers) {\n      for (let h in options.headers) {\n        headers[h] = options.headers[h];\n      }\n    }\n  }\n\n  options.headers = headers;\n  let results = null;\n  let dbugText = null;\n  let data = null;\n\n  try {\n    results = await fetch(`${api_url}${endpoint}`, options);\n    dbugText = await results.text();\n\n    try {\n      // console.log(dbugText);\n      data = JSON.parse(dbugText);\n    } catch (e) {\n      return {\n        error: dbugText\n      };\n    }\n\n    if (data.error) {}\n\n    return data;\n  } catch (e) {\n    return {\n      error: e.message\n    };\n  }\n};\n\nexport const refreshTOken = async l_storage => {\n  try {\n    let response = await fetch(\"/token/refresh/\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        refresh: l_storage.refresh\n      })\n    });\n    let responseData = await response.text();\n    return JSON.parse(responseData);\n  } catch (e) {\n    return {\n      error: e.message\n    };\n  }\n};\nexport default ufetch;","map":null,"metadata":{},"sourceType":"module"}