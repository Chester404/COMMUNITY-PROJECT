{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\CommunityProject\\\\cp-fe\\\\pages\\\\auth\\\\signup.tsx\";\nvar __jsx = React.createElement;\nimport HeaderComponent from \"../../components/HeaderComponent\";\nimport CenterContent from \"../../components/CenterContent\";\nimport CardComponent from \"../../components/CardComponent\";\nimport ContainerComponent from \"../../components/ContainerComponent\";\nimport Prompt from \"../../components/Prompt\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\"; // Font Awesome\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\n\nconst eye = __jsx(FontAwesomeIcon, {\n  icon: faEye,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }\n});\n\nimport styles from \"./styles.module.css\"; // Utils\n\nimport emailValidation from \"../../utils/emailValidation\";\nimport phoneValidation from \"../../utils/phoneValidation\"; // Hooks\n\nimport React, { useState } from \"react\"; // Next stuff\n\nimport Link from \"next/link\";\n\nconst Signup = () => {\n  let data;\n  const {\n    0: validated,\n    1: setValidated\n  } = useState(false);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: phoneNumber,\n    1: setPhoneNumber\n  } = useState(\"\");\n  const {\n    0: emailValidity,\n    1: setEmailValidity\n  } = useState(\"invalid\");\n  const {\n    0: phoneValidity,\n    1: setPhoneValidity\n  } = useState(\"invalid\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState(\"mismatch\");\n  const {\n    0: passwordFieldValidity,\n    1: setPasswordFieldValidity\n  } = useState(\"invalid\");\n  const {\n    0: userType,\n    1: setUserType\n  } = useState(\"Organization\");\n  const {\n    0: isSent,\n    1: setIsSent\n  } = useState(false);\n  const {\n    0: passwordShown,\n    1: setPasswordShown\n  } = useState(false);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: userName,\n    1: setUserName\n  } = useState(\"\");\n  const {\n    0: firstName,\n    1: setFirstName\n  } = useState(\"\");\n  const {\n    0: lastName,\n    1: setLastName\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: promptBody,\n    1: setPromptBody\n  } = useState(\"\");\n  const {\n    0: linkTo,\n    1: setLinkTo\n  } = useState(null);\n  const {\n    0: linkText,\n    1: setLinkText\n  } = useState(null);\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false); // Toggle Password Visibility\n\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const loader = () => __jsx(\"span\", {\n    className: \"spinner-border spinner-border-sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    style: {\n      width: \"1.5rem\",\n      height: \"1.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }); // Email Phone Validation\n\n\n  const validateEmail = e => {\n    if (emailValidation(e.target.value)) {\n      setEmail(e.target.value);\n      setEmailValidity(\"valid\");\n    } else {\n      setEmailValidity(\"invalid\");\n    }\n  };\n\n  const validatePhone = e => {\n    if (phoneValidation(e.target.value)) {\n      setPhoneNumber(e.target.value);\n      setPhoneValidity(\"valid\");\n    } else {\n      setPhoneValidity(\"invalid\");\n    }\n  }; // Password Validation\n\n\n  const validatePassword = e => {\n    if (e.target.value.match(/[a-z]/g) && e.target.value.match(/[A-Z]/g) && e.target.value.match(/[0-9]/g) && e.target.value.match(/[^a-zA-Z\\d]/g) && e.target.value.length >= 8) {\n      // res = \"TRUE\";\n      setPassword(e.target.value);\n      setPasswordFieldValidity(\"valid\");\n    } // return true\n    // set field to invalid\n    else {\n        // console.log(\"invalid password\")\n        setPasswordFieldValidity(\"invalid\");\n      }\n  };\n\n  const confirmPasswordMatch = e => {\n    if (e.target.value === password) {\n      setConfirmPassword(\"match\"); // data.first_name = firstName\n      // data.last_name = lastName\n      // data.email = email\n      // data.password = password\n      // data.phone_number = phoneNumber\n      // data.user_type = userType   \n    } else {\n      setConfirmPassword(\"mismatch\");\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n\n    if (email && password && confirmPassword === \"match\") {\n      try {\n        const result = await axios.post(\"http://51.116.114.155:8080/auth/registration/\", {\n          email: email,\n          password: password,\n          first_name: firstName,\n          last_name: lastName,\n          phone_number: phoneNumber\n        });\n\n        if (result) {\n          setLoading(false);\n          console.log(\"RESULT:\", result);\n\n          if (result.status === 200 || result.statusText === \"Created\") {\n            // go to landing page\n            setPromptBody(\"A confirmation has been sent to your email. Please retrieve the code and confirm acount\");\n            setLinkTo(\"confirmaccount\");\n            setLinkText(\"Confirm Account\");\n            setShow(true);\n            setLoading(false);\n          }\n        }\n      } catch (err) {\n        console.log(err.message);\n\n        if (err.message === \"Request failed with status code 400\") {\n          setPromptBody(\"User with this email already exists\");\n          setShow(true);\n          setLoading(false);\n        } else if (err.message === \"Request failed with status code 404\") {// bad endpoint\n        } else if (err.message === \"Network Error\") {\n          // bad network connection\n          setPromptBody(\"Please check your network connection and try again.\");\n          setShow(true);\n          setLoading(false);\n        }\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, __jsx(Prompt // body={`A confirmation has been sent to your email. Please retrieve the code and\n  // confirm acount`}\n  , {\n    linkTo: linkTo,\n    linkText: linkText,\n    show: show,\n    handleClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, promptBody)), __jsx(HeaderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }), __jsx(CenterContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, __jsx(ContainerComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, __jsx(CardComponent, {\n    title: \"Signup\",\n    footer: \"User Agreement\",\n    width: \"30rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, __jsx(\"header\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, \"Market \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 24\n    }\n  }, \"Circle\")), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, \"Make the most of your business\"), __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, \"Already on market circle?\", __jsx(Link, {\n    href: \"/auth/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }, \"Login\")))), __jsx(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, \"First Name\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"signup_firstname\",\n    className: \"form-control\",\n    placeholder: \"Please enter your first name...\",\n    defaultValue: firstName,\n    onChange: e => setFirstName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, \"Last Name\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"signup_lastname\",\n    className: \"form-control\",\n    placeholder: \"Please enter your last name...\",\n    defaultValue: lastName,\n    onChange: e => setLastName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"signup_email\",\n    className: \"form-control\",\n    placeholder: \"Please enter a valid email..\",\n    required: true,\n    defaultValue: email,\n    onChange: validateEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, emailValidity), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, \"Please enter valid email.\")), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, \"Phone Number\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"signup_phonenumber\",\n    className: \"form-control\",\n    placeholder: \"Please enter your phone number\",\n    defaultValue: phoneNumber,\n    onChange: validatePhone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }), __jsx(\"small\", {\n    id: \"phoneHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, phoneValidity)), __jsx(\"div\", {\n    className: styles.passWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    className: \"form-control\",\n    id: \"signup_password\",\n    type: passwordShown ? \"text\" : \"password\",\n    placeholder: \"Password must be atleast 8 characters long.\",\n    required: true,\n    defaultValue: password,\n    onChange: validatePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }\n  }), __jsx(\"i\", {\n    onClick: togglePasswordVisiblity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 19\n    }\n  }, eye), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }\n  }, passwordFieldValidity))), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, \"Confirm Password\"), __jsx(\"input\", {\n    id: \"signup_confirm_password\",\n    className: \"form-control\",\n    type: \"password\",\n    placeholder: \"Password must be atleast 8 characters long.\",\n    required: true // defaultValue={confirmPassword}\n    ,\n    onChange: confirmPasswordMatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, confirmPassword)), __jsx(\"div\", {\n    className: \"mb-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    id: \"inline-radio-1\",\n    name: \"radioButton\",\n    checked: userType === \"Organization\",\n    value: \"Organization\",\n    onChange: e => setUserType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 19\n    }\n  }), __jsx(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"inline-radio-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 19\n    }\n  }, \"Organization\")), __jsx(\"div\", {\n    className: \"form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    id: \"inline-radio-2\",\n    name: \"radioButton\" // checked={userType === \"Individual\"}\n    ,\n    value: \"Individual\",\n    onChange: e => setUserType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 19\n    }\n  }), __jsx(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"inline-radio-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 19\n    }\n  }, \"Individual\"))), __jsx(\"button\", {\n    id: \"signup_button\",\n    className: \"btn btn-primary btn-lg btn-block\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, loading ? loader() : null, \"Signup\")), __jsx(\"footer\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 15\n    }\n  }, \"By clicking sign up, you agree to the Market Circle\"), __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 15\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }\n  }, \"User Agreement, Privacy Policy and Cookie Policy\")))))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/user/Documents/CommunityProject/cp-fe/pages/auth/signup.tsx"],"names":["HeaderComponent","CenterContent","CardComponent","ContainerComponent","Prompt","Form","axios","FontAwesomeIcon","faEye","eye","styles","emailValidation","phoneValidation","React","useState","Link","Signup","data","validated","setValidated","email","setEmail","phoneNumber","setPhoneNumber","emailValidity","setEmailValidity","phoneValidity","setPhoneValidity","password","setPassword","confirmPassword","setConfirmPassword","passwordFieldValidity","setPasswordFieldValidity","userType","setUserType","isSent","setIsSent","passwordShown","setPasswordShown","show","setShow","userName","setUserName","firstName","setFirstName","lastName","setLastName","loading","setLoading","promptBody","setPromptBody","linkTo","setLinkTo","linkText","setLinkText","handleShow","handleClose","togglePasswordVisiblity","loader","width","height","validateEmail","e","target","value","validatePhone","validatePassword","match","length","confirmPasswordMatch","handleSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","result","post","first_name","last_name","phone_number","console","log","status","statusText","err","message","passWrapper"],"mappings":"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","sourcesContent":["import HeaderComponent from \"../../components/HeaderComponent\";\r\nimport CenterContent from \"../../components/CenterContent\";\r\nimport CardComponent from \"../../components/CardComponent\";\r\nimport ContainerComponent from \"../../components/ContainerComponent\";\r\nimport Prompt from \"../../components/Prompt\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport axios from \"axios\";\r\n\r\n// Font Awesome\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nconst eye = <FontAwesomeIcon icon={faEye} />;\r\n\r\nimport styles from \"./styles.module.css\";\r\n\r\n// Utils\r\nimport emailValidation from \"../../utils/emailValidation\";\r\nimport phoneValidation from \"../../utils/phoneValidation\";\r\n\r\n// Hooks\r\nimport React, { useState } from \"react\";\r\n\r\n// Next stuff\r\nimport Link from \"next/link\";\r\n\r\nconst Signup = () => {\r\n  let data:any \r\n  const [validated, setValidated] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [emailValidity, setEmailValidity] = useState(\"invalid\");\r\n  const [phoneValidity, setPhoneValidity] = useState(\"invalid\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"mismatch\");\r\n  const [passwordFieldValidity, setPasswordFieldValidity] = useState(\"invalid\");\r\n  const [userType, setUserType] = useState(\"Organization\");\r\n  const [isSent, setIsSent] = useState(false);\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [promptBody,setPromptBody] = useState(\"\");\r\n  const [linkTo, setLinkTo] = useState(null);\r\n  const [linkText, setLinkText] = useState(null);\r\n\r\n  const handleShow = () => setShow(true);\r\n  const handleClose = () => setShow(false);\r\n\r\n  // Toggle Password Visibility\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n\r\n  const loader = () => (\r\n    <span\r\n      className=\"spinner-border spinner-border-sm\"\r\n      role=\"status\"\r\n      aria-hidden=\"true\"\r\n      style={{ width: \"1.5rem\", height: \"1.5rem\" }}\r\n    ></span>\r\n  );  \r\n\r\n  // Email Phone Validation\r\n  const validateEmail = (e) => {\r\n    if (emailValidation(e.target.value)) {\r\n      setEmail(e.target.value);\r\n      setEmailValidity(\"valid\");\r\n    } else {\r\n      setEmailValidity(\"invalid\");\r\n    }\r\n  };\r\n\r\n  const validatePhone = (e) => {\r\n    if (phoneValidation(e.target.value)) {\r\n      setPhoneNumber(e.target.value);\r\n      setPhoneValidity(\"valid\")\r\n    }else{\r\n      setPhoneValidity(\"invalid\")\r\n    }\r\n  };\r\n\r\n  // Password Validation\r\n  const validatePassword = (e) => {\r\n    if (\r\n      e.target.value.match(/[a-z]/g) &&\r\n      e.target.value.match(/[A-Z]/g) &&\r\n      e.target.value.match(/[0-9]/g) &&\r\n      e.target.value.match(/[^a-zA-Z\\d]/g) &&\r\n      e.target.value.length >= 8\r\n    ) {\r\n      // res = \"TRUE\";\r\n      setPassword(e.target.value);\r\n      setPasswordFieldValidity(\"valid\");\r\n    }\r\n    // return true\r\n    // set field to invalid\r\n    else {\r\n      // console.log(\"invalid password\")\r\n      setPasswordFieldValidity(\"invalid\");\r\n    }\r\n  };\r\n\r\n  const confirmPasswordMatch = (e) => {\r\n    if (e.target.value === password) {\r\n      setConfirmPassword(\"match\");\r\n      // data.first_name = firstName\r\n      // data.last_name = lastName\r\n      // data.email = email\r\n      // data.password = password\r\n      // data.phone_number = phoneNumber\r\n      // data.user_type = userType   \r\n\r\n    } else {\r\n      setConfirmPassword(\"mismatch\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n    } \r\n\r\n    if(email && password && confirmPassword === \"match\"){\r\n      try {\r\n        const result = await axios.post(\"http://51.116.114.155:8080/auth/registration/\", {\r\n          email:email,\r\n          password:password,\r\n          first_name:firstName,\r\n          last_name:lastName,\r\n          phone_number:phoneNumber\r\n        });\r\n\r\n        if (result) {\r\n          setLoading(false);\r\n          console.log(\"RESULT:\", result);\r\n          if (result.status === 200 || result.statusText === \"Created\") {\r\n            // go to landing page\r\n            setPromptBody(\"A confirmation has been sent to your email. Please retrieve the code and confirm acount\");\r\n            setLinkTo(\"confirmaccount\");\r\n            setLinkText(\"Confirm Account\");\r\n            setShow(true);\r\n            setLoading(false);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err.message);\r\n        if (err.message === \"Request failed with status code 400\") {          \r\n          setPromptBody(\"User with this email already exists\");\r\n          setShow(true);\r\n          setLoading(false);\r\n        } else if (err.message === \"Request failed with status code 404\") {\r\n          // bad endpoint\r\n        } else if (err.message === \"Network Error\") {\r\n          // bad network connection\r\n          setPromptBody(\"Please check your network connection and try again.\");\r\n          setShow(true);\r\n          setLoading(false);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Prompt\r\n        // body={`A confirmation has been sent to your email. Please retrieve the code and\r\n        // confirm acount`}\r\n        linkTo={linkTo}\r\n        linkText={linkText}\r\n        show={show}\r\n        handleClose={handleClose}\r\n      >\r\n        <p>\r\n          {promptBody}\r\n        </p>\r\n      </Prompt>\r\n\r\n      <HeaderComponent />\r\n\r\n      <CenterContent>\r\n        <ContainerComponent>\r\n          <CardComponent title=\"Signup\" footer=\"User Agreement\" width=\"30rem\">\r\n            <header className=\"text-center\">\r\n              <h4>\r\n                Market <span>Circle</span>\r\n              </h4>\r\n              <h5>Make the most of your business</h5>\r\n              <h6>\r\n                Already on market circle?\r\n                <Link href=\"/auth/login\">\r\n                  <a>Login</a>\r\n                </Link>\r\n              </h6>\r\n            </header>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label>First Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"signup_firstname\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Please enter your first name...\"\r\n                  defaultValue={firstName}\r\n                  onChange={(e) => setFirstName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Last Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"signup_lastname\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Please enter your last name...\"\r\n                  defaultValue={lastName}\r\n                  onChange={(e) => setLastName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"signup_email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Please enter a valid email..\"\r\n                  required\r\n                  defaultValue={email}\r\n                  onChange={validateEmail}\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                  {emailValidity}\r\n                </small>\r\n                <div className=\"invalid-feedback\">\r\n                  Please enter valid email.\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Phone Number</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"signup_phonenumber\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Please enter your phone number\"\r\n                  defaultValue={phoneNumber}\r\n                  onChange={validatePhone}\r\n                />\r\n                <small id=\"phoneHelp\" className=\"form-text text-muted\">\r\n                  {phoneValidity}\r\n                </small>\r\n              </div>\r\n              <div className={styles.passWrapper}>\r\n                <div className=\"form-group\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    id=\"signup_password\"\r\n                    type={passwordShown ? \"text\" : \"password\"}\r\n                    placeholder=\"Password must be atleast 8 characters long.\"\r\n                    required\r\n                    defaultValue={password}\r\n                    onChange={validatePassword}\r\n                  />\r\n                  <i onClick={togglePasswordVisiblity}>{eye}</i>\r\n                  <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                    {passwordFieldValidity}\r\n                  </small>\r\n                  {/* <Form.Control.Feedback type=\"invalid\">\r\n                  Please enter a valid password.\r\n                </Form.Control.Feedback> */}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Confirm Password</label>\r\n                <input\r\n                  id=\"signup_confirm_password\"\r\n                  className=\"form-control\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password must be atleast 8 characters long.\"\r\n                  required\r\n                  // defaultValue={confirmPassword}\r\n                  onChange={confirmPasswordMatch}\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                  {confirmPassword}\r\n                </small>\r\n              </div>\r\n\r\n              <div className=\"mb-3 text-center\">\r\n                <div className=\"form-check form-check-inline\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    id=\"inline-radio-1\"\r\n                    name=\"radioButton\"\r\n                    checked={userType === \"Organization\"}\r\n                    value=\"Organization\"\r\n                    onChange={(e) => setUserType(e.target.value)}\r\n                  />\r\n                  <label className=\"form-check-label\" htmlFor=\"inline-radio-1\">\r\n                    Organization\r\n                  </label>\r\n                </div>\r\n                {/* custom-control custom-radio custom-control-inline */}\r\n                <div className=\"form-check form-check-inline\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    id=\"inline-radio-2\"\r\n                    name=\"radioButton\"\r\n                    // checked={userType === \"Individual\"}\r\n                    value=\"Individual\"\r\n                    onChange={(e) => setUserType(e.target.value)}\r\n                  />\r\n                  <label className=\"form-check-label\" htmlFor=\"inline-radio-2\">\r\n                    Individual\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <button\r\n                id=\"signup_button\"\r\n                className=\"btn btn-primary btn-lg btn-block\"\r\n                type=\"submit\"\r\n              >\r\n                {loading ? loader() : null}\r\n                Signup\r\n              </button>\r\n            </Form>\r\n            {/* Footer Section */}\r\n            <footer className=\"text-center\">\r\n              <h6>By clicking sign up, you agree to the Market Circle</h6>\r\n              <h6>\r\n                <strong>\r\n                  User Agreement, Privacy Policy and Cookie Policy\r\n                </strong>\r\n              </h6>\r\n            </footer>\r\n          </CardComponent>\r\n        </ContainerComponent>\r\n      </CenterContent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}