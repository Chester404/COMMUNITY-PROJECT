{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/james/Documents/dev/cp-fe/contextStore/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useReducer } from \"react\";\nexport var Store = createContext(\"\");\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"change\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport var ContextWrapper = function ContextWrapper(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useReducer = useReducer(reducer, \"Paul\"),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return __jsx(Store.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_s(ContextWrapper, \"7VZWd1Mfl2xRAWIpcqKDMW5705g=\");\n\n_c = ContextWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextWrapper\");","map":{"version":3,"sources":["/home/james/Documents/dev/cp-fe/contextStore/index.tsx"],"names":["createContext","useReducer","Store","reducer","state","action","type","payload","ContextWrapper","children","dispatch"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AAEA,OAAO,IAAMC,KAAK,GAAGF,aAAa,CAAe,EAAf,CAA3B;;AAOP,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPD;;AASA,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,oBACpBR,UAAU,CAACE,OAAD,EAAU,MAAV,CADU;AAAA,MACvCC,KADuC;AAAA,MAChCM,QADgC;;AAE9C,SACE,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAE;AAAEN,MAAAA,KAAK,EAALA,KAAF;AAASM,MAAAA,QAAQ,EAARA;AAAT,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CD,QAA7C,CADF;AAGD,CALM;;GAAMD,c;;KAAAA,c","sourcesContent":["import { createContext, useReducer } from \"react\";\n\nexport const Store = createContext<string | any>(\"\");\n\ninterface ISignup {\n  userName: string;\n  password: string;\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"change\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const ContextWrapper = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, \"Paul\");\n  return (\n    <Store.Provider value={{ state, dispatch }}>{children}</Store.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}