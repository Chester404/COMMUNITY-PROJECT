{"ast":null,"code":"var _jsxFileName = \"/home/james/Documents/dev/cp-fe/pages/auth/confirmaccount.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport Layout from \"../../components/Layout\";\nimport { useState } from \"react\";\nimport { Auth } from \"../../lib/endpoints\";\nimport ReactInputVerificationCode from \"react-input-verification-code\";\n\nconst Loader = () => __jsx(\"span\", {\n  className: \"spinner-border spinner-border-sm\",\n  role: \"status\",\n  \"aria-hidden\": \"true\",\n  style: {\n    width: \"1.5rem\",\n    height: \"1.5rem\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n});\n\nconst ConfirmAccount = () => {\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: isRegistered,\n    1: setIsRegistered\n  } = useState(null);\n  const {\n    0: isInputValid,\n    1: setIsInputValid\n  } = useState(null);\n  const {\n    0: isLoggedIn,\n    1: setIsLoggedIn\n  } = useState(null);\n  const {\n    0: promptBody,\n    1: setPromptBody\n  } = useState(\"\");\n  const {\n    0: linkTo,\n    1: setLinkTo\n  } = useState(null);\n  const {\n    0: linkText,\n    1: setLinkText\n  } = useState(null);\n  const {\n    0: authentication_property,\n    1: setaAthenticationProperty\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: status,\n    1: setStatus\n  } = useState(\"\");\n  const {\n    0: statusColor,\n    1: setStatusColor\n  } = useState(\"blue\");\n  const {\n    0: integer_key,\n    1: setIntegerKey\n  } = useState(null);\n  const router = useRouter();\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    setStatusColor(\"blue\");\n    setStatus(\"Please wait...\");\n\n    try {\n      const result = await new Auth().confirmaccount(integer_key);\n\n      if (result.status === 200) {\n        setLoading(false);\n        console.log(\"RESULT:\", result);\n        setStatusColor(\"blue\");\n        setStatus(\"Activation successfull. You can now login\");\n        setTimeout(() => {\n          // go to landing page\n          window.localStorage.setItem(\"cp-activation\", JSON.stringify(result.data));\n          router.push(\"/auth/login\"); //   setPromptBody(\"Replace this prompt with landing page\");\n          //   setShow(true);\n          //   setLoading(false);\n        }, 250);\n      }\n    } catch (err) {\n      console.log(err.message);\n\n      if (err.message === \"Request failed with status code 401\") {\n        // bad credentials\n        console.log(\"BAD CREDENTIALS\");\n        setStatusColor(\"red\");\n        setStatus(\"Please re-enter your PIN and try again.\"); // setPromptBody(\"Please check your credentials and try again.\");\n        // setLinkTo(\"signup\");\n        // setLinkText(\"Signup\");\n        // setShow(true);\n\n        setLoading(false);\n      } else if (err.message === \"Request failed with status code 404\") {\n        // bad endpoint\n        setStatusColor(\"red\");\n        setStatus(\"An error occured. Contact systems admin\");\n      } else if (err.message === \"Network Error\") {\n        // bad network connection\n        setStatusColor(\"red\");\n        setStatus(\"Please check your network connection and try again.\"); // setPromptBody(\"Please check your network connection and try again.\");\n        // setShow(true);\n\n        setLoading(false);\n      }\n\n      setTimeout(() => {\n        setStatus(\"\");\n      }, 3500);\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"/auth.css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Enter code for verification.\"))), __jsx(ReactInputVerificationCode, {\n    onChange: e => setIntegerKey(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary btn-block submitbutton\",\n    id: \"submitButton\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Continue\")), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"If you don't receive the code within 1 minute, tap below to resend it\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-outline-primary\",\n    id: \"resendCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Resend Code\")), __jsx(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"0.46\")), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      color: statusColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, \"\\xA0\", status)), \" \");\n};\n\nexport default ConfirmAccount;","map":{"version":3,"sources":["/home/james/Documents/dev/cp-fe/pages/auth/confirmaccount.tsx"],"names":["Head","useRouter","Layout","useState","Auth","ReactInputVerificationCode","Loader","width","height","ConfirmAccount","show","setShow","isRegistered","setIsRegistered","isInputValid","setIsInputValid","isLoggedIn","setIsLoggedIn","promptBody","setPromptBody","linkTo","setLinkTo","linkText","setLinkText","authentication_property","setaAthenticationProperty","password","setPassword","loading","setLoading","status","setStatus","statusColor","setStatusColor","integer_key","setIntegerKey","router","handleClose","handleShow","handleSubmit","event","preventDefault","result","confirmaccount","console","log","setTimeout","window","localStorage","setItem","JSON","stringify","data","push","err","message","textAlign","e","color"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport Layout from \"../../components/Layout\";\nimport Link from \"next/link\";\nimport { useState, FormEvent } from \"react\";\nimport { Auth } from \"../../lib/endpoints\";\nimport { route } from \"next/dist/next-server/server/router\";\nimport ReactInputVerificationCode from \"react-input-verification-code\";\nimport axios from \"axios\";\n\nconst Loader = () => (\n  <span\n    className=\"spinner-border spinner-border-sm\"\n    role=\"status\"\n    aria-hidden=\"true\"\n    style={{ width: \"1.5rem\", height: \"1.5rem\" }}\n  ></span>\n);\n\nconst ConfirmAccount = () => {\n  const [show, setShow] = useState(false);\n  const [isRegistered, setIsRegistered] = useState(null);\n  const [isInputValid, setIsInputValid] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(null);\n  const [promptBody, setPromptBody] = useState(\"\");\n  const [linkTo, setLinkTo] = useState(null);\n  const [linkText, setLinkText] = useState(null);\n  const [authentication_property, setaAthenticationProperty] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(\"\");\n  const [statusColor, setStatusColor] = useState(\"blue\");\n  const [integer_key, setIntegerKey] = useState(null);\n\n  const router = useRouter();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n    setStatusColor(\"blue\");\n    setStatus(\"Please wait...\");\n    try {\n      const result = await new Auth().confirmaccount(integer_key);\n      if (result.status === 200) {\n        setLoading(false);\n        console.log(\"RESULT:\", result);\n        setStatusColor(\"blue\");\n        setStatus(\"Activation successfull. You can now login\");\n\n        setTimeout(() => {\n          // go to landing page\n          window.localStorage.setItem(\n            \"cp-activation\",\n            JSON.stringify(result.data)\n          );\n          router.push(\"/auth/login\");\n          //   setPromptBody(\"Replace this prompt with landing page\");\n          //   setShow(true);\n          //   setLoading(false);\n        }, 250);\n      }\n    } catch (err) {\n      console.log(err.message);\n      if (err.message === \"Request failed with status code 401\") {\n        // bad credentials\n        console.log(\"BAD CREDENTIALS\");\n        setStatusColor(\"red\");\n        setStatus(\"Please re-enter your PIN and try again.\");\n\n        // setPromptBody(\"Please check your credentials and try again.\");\n        // setLinkTo(\"signup\");\n        // setLinkText(\"Signup\");\n        // setShow(true);\n        setLoading(false);\n      } else if (err.message === \"Request failed with status code 404\") {\n        // bad endpoint\n        setStatusColor(\"red\");\n        setStatus(\"An error occured. Contact systems admin\");\n      } else if (err.message === \"Network Error\") {\n        // bad network connection\n        setStatusColor(\"red\");\n        setStatus(\"Please check your network connection and try again.\");\n        // setPromptBody(\"Please check your network connection and try again.\");\n        // setShow(true);\n        setLoading(false);\n      }\n      setTimeout(() => {\n        setStatus(\"\");\n      }, 3500);\n    }\n  };\n\n  return (\n    <Layout>\n      <Head>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"/auth.css\" />\n      </Head>\n      <div\n        style={{\n          textAlign: \"center\",\n        }}\n      >\n        <div>\n          <h3>\n            <b>Enter code for verification.</b>\n          </h3>\n        </div>\n\n        <ReactInputVerificationCode onChange={(e) => setIntegerKey(e)} />\n      </div>\n      <br />\n      <div>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-block submitbutton\"\n          id=\"submitButton\"\n          onClick={handleSubmit}\n        >\n          Continue\n        </button>\n      </div>\n      <br />\n      <div className=\"text-center\">\n        If you don't receive the code within 1 minute, tap below to resend it\n        <br />\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-primary\"\n              id=\"resendCode\"\n            >\n              Resend Code\n            </button>\n          </div>\n          <div className=\"col-6\">0.46</div>\n        </div>\n        <div\n          style={{\n            textAlign: \"center\",\n            color: statusColor,\n          }}\n        >\n          &nbsp;{status}\n        </div>\n      </div>{\" \"}\n    </Layout>\n  );\n};\n\nexport default ConfirmAccount;\n"]},"metadata":{},"sourceType":"module"}