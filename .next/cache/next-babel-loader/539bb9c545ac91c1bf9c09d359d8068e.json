{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/james/Documents/dev/cp-fe/pages/auth/confirmaccount.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport Layout from \"../../components/Layout\";\nimport { useState } from \"react\";\nimport { Auth } from \"../../lib/endpoints\";\nimport ReactInputVerificationCode from \"react-input-verification-code\";\n\nvar Loader = function Loader() {\n  return __jsx(\"span\", {\n    className: \"spinner-border spinner-border-sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    style: {\n      width: \"1.5rem\",\n      height: \"1.5rem\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }\n  });\n};\n\n_c = Loader;\n\nvar ConfirmAccount = function ConfirmAccount() {\n  _s();\n\n  var _useState = useState(false),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  var _useState2 = useState(null),\n      isRegistered = _useState2[0],\n      setIsRegistered = _useState2[1];\n\n  var _useState3 = useState(null),\n      isInputValid = _useState3[0],\n      setIsInputValid = _useState3[1];\n\n  var _useState4 = useState(null),\n      isLoggedIn = _useState4[0],\n      setIsLoggedIn = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      promptBody = _useState5[0],\n      setPromptBody = _useState5[1];\n\n  var _useState6 = useState(null),\n      linkTo = _useState6[0],\n      setLinkTo = _useState6[1];\n\n  var _useState7 = useState(null),\n      linkText = _useState7[0],\n      setLinkText = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      authentication_property = _useState8[0],\n      setaAthenticationProperty = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      password = _useState9[0],\n      setPassword = _useState9[1];\n\n  var _useState10 = useState(false),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      status = _useState11[0],\n      setStatus = _useState11[1];\n\n  var _useState12 = useState(\"blue\"),\n      statusColor = _useState12[0],\n      setStatusColor = _useState12[1];\n\n  var _useState13 = useState(null),\n      integer_key = _useState13[0],\n      setIntegerKey = _useState13[1];\n\n  var router = useRouter();\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              setLoading(true);\n              setStatusColor(\"blue\");\n              setStatus(\"Please wait...\");\n              _context.prev = 4;\n              _context.next = 7;\n              return new Auth().confirmaccount(integer_key);\n\n            case 7:\n              result = _context.sent;\n\n              if (result.status === 200) {\n                setLoading(false);\n                console.log(\"RESULT:\", result);\n                setStatusColor(\"blue\");\n                setStatus(\"Activation successfull. You can now login\");\n                setTimeout(function () {\n                  // go to landing page\n                  window.localStorage.setItem(\"cp-activation\", JSON.stringify(result.data));\n                  router.push(\"/auth/login\"); //   setPromptBody(\"Replace this prompt with landing page\");\n                  //   setShow(true);\n                  //   setLoading(false);\n                }, 250);\n              }\n\n              _context.next = 16;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](4);\n              console.log(_context.t0.message);\n\n              if (_context.t0.message === \"Request failed with status code 401\") {\n                // bad credentials\n                console.log(\"BAD CREDENTIALS\");\n                setStatusColor(\"red\");\n                setStatus(\"Please re-enter your PIN and try again.\"); // setPromptBody(\"Please check your credentials and try again.\");\n                // setLinkTo(\"signup\");\n                // setLinkText(\"Signup\");\n                // setShow(true);\n\n                setLoading(false);\n              } else if (_context.t0.message === \"Request failed with status code 404\") {\n                // bad endpoint\n                setStatusColor(\"red\");\n                setStatus(\"An error occured. Contact systems admin\");\n              } else if (_context.t0.message === \"Network Error\") {\n                // bad network connection\n                setStatusColor(\"red\");\n                setStatus(\"Please check your network connection and try again.\"); // setPromptBody(\"Please check your network connection and try again.\");\n                // setShow(true);\n\n                setLoading(false);\n              }\n\n              setTimeout(function () {\n                setStatus(\"\");\n              }, 3500);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 11]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"/auth.css\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"Enter code for verification.\"))), __jsx(ReactInputVerificationCode, {\n    onChange: function onChange(e) {\n      return setIntegerKey(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary btn-block submitbutton\",\n    id: \"submitButton\",\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Continue\")), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"If you don't receive the code within 1 minute, tap below to resend it\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"col-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    className: \"btn btn-outline-primary\",\n    id: \"resendCode\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Resend Code\")), __jsx(\"div\", {\n    className: \"col-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"0.46\")), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      color: statusColor\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, \"\\xA0\", status)), \" \"));\n};\n\n_s(ConfirmAccount, \"IWsm0Ux7Y7c0V23BD2mRsFoZgjM=\", false, function () {\n  return [useRouter];\n});\n\n_c2 = ConfirmAccount;\nexport default ConfirmAccount;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Loader\");\n$RefreshReg$(_c2, \"ConfirmAccount\");","map":{"version":3,"sources":["/home/james/Documents/dev/cp-fe/pages/auth/confirmaccount.tsx"],"names":["Head","useRouter","Layout","useState","Auth","ReactInputVerificationCode","Loader","width","height","ConfirmAccount","show","setShow","isRegistered","setIsRegistered","isInputValid","setIsInputValid","isLoggedIn","setIsLoggedIn","promptBody","setPromptBody","linkTo","setLinkTo","linkText","setLinkText","authentication_property","setaAthenticationProperty","password","setPassword","loading","setLoading","status","setStatus","statusColor","setStatusColor","integer_key","setIntegerKey","router","handleClose","handleShow","handleSubmit","event","preventDefault","confirmaccount","result","console","log","setTimeout","window","localStorage","setItem","JSON","stringify","data","push","message","textAlign","e","color"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport Layout from \"../../components/Layout\";\nimport Link from \"next/link\";\nimport { useState, FormEvent } from \"react\";\nimport { Auth } from \"../../lib/endpoints\";\nimport { route } from \"next/dist/next-server/server/router\";\nimport ReactInputVerificationCode from \"react-input-verification-code\";\nimport axios from \"axios\";\n\nconst Loader = () => (\n  <span\n    className=\"spinner-border spinner-border-sm\"\n    role=\"status\"\n    aria-hidden=\"true\"\n    style={{ width: \"1.5rem\", height: \"1.5rem\" }}\n  ></span>\n);\n\nconst ConfirmAccount = () => {\n  const [show, setShow] = useState(false);\n  const [isRegistered, setIsRegistered] = useState(null);\n  const [isInputValid, setIsInputValid] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(null);\n  const [promptBody, setPromptBody] = useState(\"\");\n  const [linkTo, setLinkTo] = useState(null);\n  const [linkText, setLinkText] = useState(null);\n  const [authentication_property, setaAthenticationProperty] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(\"\");\n  const [statusColor, setStatusColor] = useState(\"blue\");\n  const [integer_key, setIntegerKey] = useState(null);\n\n  const router = useRouter();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n    setStatusColor(\"blue\");\n    setStatus(\"Please wait...\");\n    try {\n      const result = await new Auth().confirmaccount(integer_key);\n      if (result.status === 200) {\n        setLoading(false);\n        console.log(\"RESULT:\", result);\n        setStatusColor(\"blue\");\n        setStatus(\"Activation successfull. You can now login\");\n\n        setTimeout(() => {\n          // go to landing page\n          window.localStorage.setItem(\n            \"cp-activation\",\n            JSON.stringify(result.data)\n          );\n          router.push(\"/auth/login\");\n          //   setPromptBody(\"Replace this prompt with landing page\");\n          //   setShow(true);\n          //   setLoading(false);\n        }, 250);\n      }\n    } catch (err) {\n      console.log(err.message);\n      if (err.message === \"Request failed with status code 401\") {\n        // bad credentials\n        console.log(\"BAD CREDENTIALS\");\n        setStatusColor(\"red\");\n        setStatus(\"Please re-enter your PIN and try again.\");\n\n        // setPromptBody(\"Please check your credentials and try again.\");\n        // setLinkTo(\"signup\");\n        // setLinkText(\"Signup\");\n        // setShow(true);\n        setLoading(false);\n      } else if (err.message === \"Request failed with status code 404\") {\n        // bad endpoint\n        setStatusColor(\"red\");\n        setStatus(\"An error occured. Contact systems admin\");\n      } else if (err.message === \"Network Error\") {\n        // bad network connection\n        setStatusColor(\"red\");\n        setStatus(\"Please check your network connection and try again.\");\n        // setPromptBody(\"Please check your network connection and try again.\");\n        // setShow(true);\n        setLoading(false);\n      }\n      setTimeout(() => {\n        setStatus(\"\");\n      }, 3500);\n    }\n  };\n\n  return (\n    <>\n      <Layout>\n        <Head>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/auth.css\" />\n        </Head>\n        <div\n          style={{\n            textAlign: \"center\",\n          }}\n        >\n          <div>\n            <h3>\n              <b>Enter code for verification.</b>\n            </h3>\n          </div>\n\n          <ReactInputVerificationCode onChange={(e) => setIntegerKey(e)} />\n        </div>\n        <br />\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary btn-block submitbutton\"\n            id=\"submitButton\"\n            onClick={handleSubmit}\n          >\n            Continue\n          </button>\n        </div>\n        <br />\n        <div className=\"text-center\">\n          If you don't receive the code within 1 minute, tap below to resend it\n          <br />\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-primary\"\n                id=\"resendCode\"\n              >\n                Resend Code\n              </button>\n            </div>\n            <div className=\"col-6\">0.46</div>\n          </div>\n          <div\n            style={{\n              textAlign: \"center\",\n              color: statusColor,\n            }}\n          >\n            &nbsp;{status}\n          </div>\n        </div>{\" \"}\n      </Layout>\n    </>\n  );\n};\n\nexport default ConfirmAccount;\n"]},"metadata":{},"sourceType":"module"}