{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\CommunityProject\\\\cp-fe\\\\pages\\\\marketplace\\\\forgottenpassword.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport HeaderComponent from \"../../components/HeaderComponent\";\nimport CenterContent from \"../../components/CenterContent\";\nimport CardComponent from \"../../components/CardComponent\";\nimport ContainerComponent from \"../../components/ContainerComponent\";\nimport Prompt from \"../../components/Prompt\";\nimport Form from \"react-bootstrap/Form\";\nimport HeadComponent from \"../../components/HeadComponent\"; // Next stuff\n\n// Utils\nimport emailPhoneValidation from \"../../utils/emailPhoneValidation\";\n\nconst ForgottenPassword = () => {\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: isInputValid,\n    1: setIsInputValid\n  } = useState(null);\n  const {\n    0: promptBody,\n    1: setPromptBody\n  } = useState(null);\n  const {\n    0: isRegistered,\n    1: setIsRegistered\n  } = useState(null);\n  const {\n    0: linkTo,\n    1: setLinkTo\n  } = useState(null);\n  const {\n    0: linkText,\n    1: setLinkText\n  } = useState(null);\n  const {\n    0: emailPhoneValidity,\n    1: setEmailPhoneValidity\n  } = useState(\"invalid\");\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const validatePhoneEmail = e => {\n    if (emailPhoneValidation(e.target.value)) {\n      // setIsInputValid(\"valid\");\n      // setPromptBody(\"Please enter a valid email\");\n      setEmailPhoneValidity(\"valid\"); // if (isRegistered === false) {\n      //   setPromptBody(\n      //     \"No account exists for this email address. Would you like to register?\"\n      //   );\n      //   setLinkTo(\"signup\");\n      //   setLinkText(\"Signup\");\n      //   // handleShow();\n      // } else {\n      //   // enter pin component\n      // }\n    } else {\n      setEmailPhoneValidity(\"invalid\"); // setIsInputValid(\"invalid\");\n\n      setPromptBody(\"Please enter a valid email\"); // handleShow();\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); // Email Phone Validation\n    // Show Forgot PIN\n\n    if (isRegistered === false) {\n      setPromptBody(\"No account exists for this email address. Would you like to register?\");\n      setLinkTo(\"signup\");\n      setLinkText(\"Signup\");\n      handleShow();\n    } else {// enter pin component\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(Prompt, {\n    show: show,\n    handleClose: handleClose,\n    linkTo: linkTo,\n    linkText: linkText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, promptBody)), __jsx(HeadComponent, {\n    pageTitle: \"Forgotten Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), __jsx(CardComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(HeaderComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), __jsx(CenterContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(ContainerComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(CardComponent, {\n    title: \"Signup\",\n    footer: \"User Agreement\",\n    width: \"30rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, __jsx(\"header\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Forgotten Password\")), __jsx(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Email/Phone Number\"), __jsx(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    id: \"formBasicEmail\",\n    onChange: validatePhoneEmail,\n    placeholder: \"Please enter a valid email or phone number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, emailPhoneValidity)), __jsx(\"button\", {\n    className: \"btn btn-primary btn-lg btn-block\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Continue\"))))));\n};\n\nexport default ForgottenPassword;","map":{"version":3,"sources":["C:/Users/user/Documents/CommunityProject/cp-fe/pages/marketplace/forgottenpassword.tsx"],"names":["React","useState","HeaderComponent","CenterContent","CardComponent","ContainerComponent","Prompt","Form","HeadComponent","emailPhoneValidation","ForgottenPassword","show","setShow","isInputValid","setIsInputValid","promptBody","setPromptBody","isRegistered","setIsRegistered","linkTo","setLinkTo","linkText","setLinkText","emailPhoneValidity","setEmailPhoneValidity","handleClose","handleShow","validatePhoneEmail","e","target","value","handleSubmit","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport HeaderComponent from \"../../components/HeaderComponent\";\r\nimport CenterContent from \"../../components/CenterContent\";\r\nimport CardComponent from \"../../components/CardComponent\";\r\nimport ContainerComponent from \"../../components/ContainerComponent\";\r\nimport Prompt from \"../../components/Prompt\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport HeadComponent from \"../../components/HeadComponent\";\r\n\r\n// Next stuff\r\nimport Link from \"next/link\";\r\n\r\n// Utils\r\nimport emailPhoneValidation from \"../../utils/emailPhoneValidation\";\r\n\r\nconst ForgottenPassword = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [isInputValid, setIsInputValid] = useState(null);\r\n  const [promptBody, setPromptBody] = useState(null);\r\n  const [isRegistered, setIsRegistered] = useState(null);\r\n  const [linkTo, setLinkTo] = useState(null);\r\n  const [linkText, setLinkText] = useState(null);\r\n  const [emailPhoneValidity, setEmailPhoneValidity] = useState(\"invalid\");\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const validatePhoneEmail = (e) => {\r\n    if (emailPhoneValidation(e.target.value)) {\r\n      // setIsInputValid(\"valid\");\r\n      // setPromptBody(\"Please enter a valid email\");\r\n      setEmailPhoneValidity(\"valid\");\r\n      // if (isRegistered === false) {\r\n      //   setPromptBody(\r\n      //     \"No account exists for this email address. Would you like to register?\"\r\n      //   );\r\n      //   setLinkTo(\"signup\");\r\n      //   setLinkText(\"Signup\");\r\n      //   // handleShow();\r\n      // } else {\r\n      //   // enter pin component\r\n      // }\r\n    } else {\r\n      setEmailPhoneValidity(\"invalid\");\r\n      // setIsInputValid(\"invalid\");\r\n      setPromptBody(\"Please enter a valid email\");\r\n      // handleShow();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Email Phone Validation\r\n    // Show Forgot PIN\r\n    if (isRegistered === false) {\r\n      setPromptBody(\r\n        \"No account exists for this email address. Would you like to register?\"\r\n      );\r\n      setLinkTo(\"signup\");\r\n      setLinkText(\"Signup\");\r\n      handleShow();\r\n    } else {\r\n      // enter pin component\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Conditional Render */}\r\n      <Prompt\r\n        show={show}\r\n        handleClose={handleClose}\r\n        linkTo={linkTo}\r\n        linkText={linkText}\r\n      >\r\n        <p>{promptBody}</p>\r\n      </Prompt>\r\n      <HeadComponent pageTitle=\"Forgotten Password\" />\r\n      <CardComponent>\r\n        <HeaderComponent />\r\n      </CardComponent>\r\n\r\n      <CenterContent>\r\n        <ContainerComponent>\r\n          <CardComponent title=\"Signup\" footer=\"User Agreement\" width=\"30rem\">\r\n            <header className=\"text-center\">\r\n              <h1>Forgotten Password</h1>\r\n            </header>\r\n            <Form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label>Email/Phone Number</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"formBasicEmail\"\r\n                  onChange={validatePhoneEmail}\r\n                  placeholder=\"Please enter a valid email or phone number.\"\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                  {emailPhoneValidity}\r\n                </small>\r\n              </div>\r\n\r\n              <button\r\n                className=\"btn btn-primary btn-lg btn-block\"\r\n                type=\"submit\"\r\n              >\r\n                Continue\r\n              </button>\r\n            </Form>\r\n          </CardComponent>\r\n        </ContainerComponent>\r\n      </CenterContent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgottenPassword;\r\n"]},"metadata":{},"sourceType":"module"}