{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/james/Documents/dev/cp-fe/pages/auth/signup.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport Layout from \"../../components/Layout\";\nimport Link from \"next/link\";\nimport Form from \"react-bootstrap/Form\"; // import Button from \"react-bootstrap/Button\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\n\nvar eye = __jsx(FontAwesomeIcon, {\n  icon: faEye,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 13\n  }\n}); // import styles from \"./styles.module.css\";\n\n\nimport emailValidation from \"../../utils/emailValidation\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nvar Signup = function Signup() {\n  _s();\n\n  var data;\n\n  var _useState = useState(false),\n      validated = _useState[0],\n      setValidated = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      email = _useState2[0],\n      setEmail = _useState2[1]; // const [phoneNumber, setPhoneNumber] = useState(\"\");\n\n\n  var _useState3 = useState(\"invalid\"),\n      emailValidity = _useState3[0],\n      setEmailValidity = _useState3[1]; // const [phoneValidity, setPhoneValidity] = useState(\"invalid\");\n\n\n  var _useState4 = useState(\"\"),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"mismatch\"),\n      confirmPassword = _useState5[0],\n      setConfirmPassword = _useState5[1];\n\n  var _useState6 = useState(\"invalid\"),\n      passwordFieldValidity = _useState6[0],\n      setPasswordFieldValidity = _useState6[1];\n\n  var _useState7 = useState(\"Organization\"),\n      userType = _useState7[0],\n      setUserType = _useState7[1];\n\n  var _useState8 = useState(false),\n      isSent = _useState8[0],\n      setIsSent = _useState8[1];\n\n  var _useState9 = useState(false),\n      passwordShown = _useState9[0],\n      setPasswordShown = _useState9[1];\n\n  var _useState10 = useState(false),\n      show = _useState10[0],\n      setShow = _useState10[1]; // const [userName, setUserName] = useState(\"\");\n  // const [firstName, setFirstName] = useState(\"\");\n  // const [lastName, setLastName] = useState(\"\");\n\n\n  var _useState11 = useState(false),\n      loading = _useState11[0],\n      setLoading = _useState11[1];\n\n  var _useState12 = useState(\"\"),\n      promptBody = _useState12[0],\n      setPromptBody = _useState12[1];\n\n  var _useState13 = useState(null),\n      linkTo = _useState13[0],\n      setLinkTo = _useState13[1];\n\n  var _useState14 = useState(null),\n      linkText = _useState14[0],\n      setLinkText = _useState14[1];\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  }; // Toggle Password Visibility\n\n\n  var togglePasswordVisiblity = function togglePasswordVisiblity() {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  var loader = function loader() {\n    return __jsx(\"span\", {\n      className: \"spinner-border spinner-border-sm\",\n      role: \"status\",\n      \"aria-hidden\": \"true\",\n      style: {\n        width: \"1.5rem\",\n        height: \"1.5rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    });\n  }; // Email Phone Validation\n\n\n  var validateEmail = function validateEmail(e) {\n    if (emailValidation(e.target.value)) {\n      setEmail(e.target.value);\n      setEmailValidity(\"valid\");\n    } else {\n      setEmailValidity(\"invalid\");\n    }\n  }; // const validatePhone = (e) => {\n  //   if (phoneValidation(e.target.value)) {\n  //     setPhoneNumber(e.target.value);\n  //     setPhoneValidity(\"valid\");\n  //   } else {\n  //     setPhoneValidity(\"invalid\");\n  //   }\n  // };\n  // Password Validation\n\n\n  var validatePassword = function validatePassword(e) {\n    if (e.target.value.match(/[a-z]/g) && e.target.value.match(/[A-Z]/g) && e.target.value.match(/[0-9]/g) && e.target.value.match(/[^a-zA-Z\\d]/g) && e.target.value.length >= 8) {\n      // res = \"TRUE\";\n      setPassword(e.target.value);\n      setPasswordFieldValidity(\"valid\");\n    } // return true\n    // set field to invalid\n    else {\n        // console.log(\"invalid password\")\n        setPasswordFieldValidity(\"invalid\");\n      }\n  };\n\n  var confirmPasswordMatch = function confirmPasswordMatch(e) {\n    if (e.target.value === password) {\n      setConfirmPassword(\"match\"); // data.first_name = firstName\n      // data.last_name = lastName\n      // data.email = email\n      // data.password = password\n      // data.phone_number = phoneNumber\n      // data.user_type = userType\n    } else {\n      setConfirmPassword(\"mismatch\");\n    }\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var form, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              form = event.currentTarget;\n\n              if (form.checkValidity() === false) {\n                console.log(\"Error\");\n                event.stopPropagation();\n              }\n\n              if (!(email && password && confirmPassword === \"match\")) {\n                _context.next = 16;\n                break;\n              }\n\n              setLoading(true);\n              _context.prev = 5;\n              _context.next = 8;\n              return axios.post(\"http://51.116.114.155:8080/auth/registration/\", {\n                email: email,\n                password: password\n              });\n\n            case 8:\n              result = _context.sent;\n\n              if (result) {\n                setLoading(false);\n                console.log(\"RESULT:\", result);\n\n                if (result.status === 200 || result.statusText === \"Created\") {\n                  // go to landing page\n                  setPromptBody(\"A confirmation has been sent to your email. Please retrieve the code and confirm acount\");\n                  setLinkTo(\"confirmaccount\");\n                  setLinkText(\"Confirm Account\");\n                  setShow(true);\n                  setLoading(false);\n                }\n              }\n\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](5);\n              console.log(_context.t0.message);\n\n              if (_context.t0.message === \"Request failed with status code 400\") {\n                setPromptBody(\"User with this email already exists\");\n                setLinkText(null);\n                setLinkTo(null);\n                setShow(true);\n                setLoading(false);\n              } else if (_context.t0.message === \"Request failed with status code 404\") {// bad endpoint\n              } else if (_context.t0.message === \"Network Error\") {\n                // bad network connection\n                setPromptBody(\"Please check your network connection and try again.\");\n                setShow(true);\n                setLoading(false);\n              }\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 12]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"/auth.css\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/Logo.png\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, \"Make the most out of your business\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, \"Already on Market Circle?\", \" \", __jsx(Link, {\n    href: \"/auth/login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, \"Log in\"))))), \" \", __jsx(\"div\", {\n    className: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    style: {\n      width: \"100%\",\n      padding: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"signup_email\",\n    className: \"form-control\",\n    placeholder: \"Please enter a valid email..\",\n    required: true,\n    defaultValue: email,\n    onChange: validateEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, emailValidity), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, \"Please enter valid email.\")), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    className: \"form-control\",\n    id: \"signup_password\",\n    type: passwordShown ? \"text\" : \"password\",\n    placeholder: \"Password must be atleast 8 characters long.\",\n    required: true,\n    defaultValue: password,\n    onChange: validatePassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }), __jsx(\"i\", {\n    onClick: togglePasswordVisiblity,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, eye), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, passwordFieldValidity)), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, \"Confirm Password\"), __jsx(\"input\", {\n    id: \"signup_confirm_password\",\n    className: \"form-control\",\n    type: \"password\",\n    placeholder: \"Password must be atleast 8 characters long.\",\n    required: true // defaultValue={confirmPassword}\n    ,\n    onChange: confirmPasswordMatch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, confirmPassword)), __jsx(\"div\", {\n    className: \"mb-3 text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-check form-check-inline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    id: \"inline-radio-1\",\n    name: \"radioButton\",\n    checked: userType === \"Organization\",\n    value: \"Organization\",\n    onChange: function onChange(e) {\n      return setUserType(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }), __jsx(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"inline-radio-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }, \"Organization\")), __jsx(\"div\", {\n    className: \"form-check form-check-inline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    id: \"inline-radio-2\",\n    name: \"radioButton\" // checked={userType === \"Individual\"}\n    ,\n    value: \"Individual\",\n    onChange: function onChange(e) {\n      return setUserType(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 15\n    }\n  }), __jsx(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"inline-radio-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, \"Individual\"))), __jsx(\"button\", {\n    id: \"signup_button\",\n    className: \"btn btn-primary btn-lg btn-block\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, loading ? loader() : null, \"Signup\"))));\n};\n\n_s(Signup, \"i/kdluo1FlxfVlnQa9oNz7+J6Zo=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/james/Documents/dev/cp-fe/pages/auth/signup.tsx"],"names":["Head","Layout","Link","Form","FontAwesomeIcon","faEye","eye","emailValidation","axios","useState","Signup","data","validated","setValidated","email","setEmail","emailValidity","setEmailValidity","password","setPassword","confirmPassword","setConfirmPassword","passwordFieldValidity","setPasswordFieldValidity","userType","setUserType","isSent","setIsSent","passwordShown","setPasswordShown","show","setShow","loading","setLoading","promptBody","setPromptBody","linkTo","setLinkTo","linkText","setLinkText","handleShow","handleClose","togglePasswordVisiblity","loader","width","height","validateEmail","e","target","value","validatePassword","match","length","confirmPasswordMatch","handleSubmit","event","preventDefault","form","currentTarget","checkValidity","console","log","stopPropagation","post","result","status","statusText","message","textAlign","padding"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport Layout from \"../../components/Layout\";\nimport Link from \"next/link\";\nimport Form from \"react-bootstrap/Form\";\n// import Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nconst eye = <FontAwesomeIcon icon={faEye} />;\n// import styles from \"./styles.module.css\";\nimport emailValidation from \"../../utils/emailValidation\";\nimport phoneValidation from \"../../utils/phoneValidation\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nconst Signup = () => {\n  let data: any;\n  const [validated, setValidated] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  // const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [emailValidity, setEmailValidity] = useState(\"invalid\");\n  // const [phoneValidity, setPhoneValidity] = useState(\"invalid\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"mismatch\");\n  const [passwordFieldValidity, setPasswordFieldValidity] = useState(\"invalid\");\n  const [userType, setUserType] = useState(\"Organization\");\n  const [isSent, setIsSent] = useState(false);\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [show, setShow] = useState(false);\n  // const [userName, setUserName] = useState(\"\");\n  // const [firstName, setFirstName] = useState(\"\");\n  // const [lastName, setLastName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [promptBody, setPromptBody] = useState(\"\");\n  const [linkTo, setLinkTo] = useState(null);\n  const [linkText, setLinkText] = useState(null);\n\n  const handleShow = () => setShow(true);\n  const handleClose = () => setShow(false);\n\n  // Toggle Password Visibility\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const loader = () => (\n    <span\n      className=\"spinner-border spinner-border-sm\"\n      role=\"status\"\n      aria-hidden=\"true\"\n      style={{ width: \"1.5rem\", height: \"1.5rem\" }}\n    ></span>\n  );\n\n  // Email Phone Validation\n  const validateEmail = (e) => {\n    if (emailValidation(e.target.value)) {\n      setEmail(e.target.value);\n      setEmailValidity(\"valid\");\n    } else {\n      setEmailValidity(\"invalid\");\n    }\n  };\n\n  // const validatePhone = (e) => {\n  //   if (phoneValidation(e.target.value)) {\n  //     setPhoneNumber(e.target.value);\n  //     setPhoneValidity(\"valid\");\n  //   } else {\n  //     setPhoneValidity(\"invalid\");\n  //   }\n  // };\n\n  // Password Validation\n  const validatePassword = (e) => {\n    if (\n      e.target.value.match(/[a-z]/g) &&\n      e.target.value.match(/[A-Z]/g) &&\n      e.target.value.match(/[0-9]/g) &&\n      e.target.value.match(/[^a-zA-Z\\d]/g) &&\n      e.target.value.length >= 8\n    ) {\n      // res = \"TRUE\";\n      setPassword(e.target.value);\n      setPasswordFieldValidity(\"valid\");\n    }\n    // return true\n    // set field to invalid\n    else {\n      // console.log(\"invalid password\")\n      setPasswordFieldValidity(\"invalid\");\n    }\n  };\n\n  const confirmPasswordMatch = (e) => {\n    if (e.target.value === password) {\n      setConfirmPassword(\"match\");\n      // data.first_name = firstName\n      // data.last_name = lastName\n      // data.email = email\n      // data.password = password\n      // data.phone_number = phoneNumber\n      // data.user_type = userType\n    } else {\n      setConfirmPassword(\"mismatch\");\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      console.log(\"Error\");\n      event.stopPropagation();\n    }\n    if (email && password && confirmPassword === \"match\") {\n      setLoading(true);\n      try {\n        const result = await axios.post(\n          \"http://51.116.114.155:8080/auth/registration/\",\n          {\n            email: email,\n            password: password,\n          }\n        );\n\n        if (result) {\n          setLoading(false);\n          console.log(\"RESULT:\", result);\n          if (result.status === 200 || result.statusText === \"Created\") {\n            // go to landing page\n            setPromptBody(\n              \"A confirmation has been sent to your email. Please retrieve the code and confirm acount\"\n            );\n            setLinkTo(\"confirmaccount\");\n            setLinkText(\"Confirm Account\");\n            setShow(true);\n            setLoading(false);\n          }\n        }\n      } catch (err) {\n        console.log(err.message);\n        if (err.message === \"Request failed with status code 400\") {\n          setPromptBody(\"User with this email already exists\");\n          setLinkText(null);\n          setLinkTo(null);\n          setShow(true);\n          setLoading(false);\n        } else if (err.message === \"Request failed with status code 404\") {\n          // bad endpoint\n        } else if (err.message === \"Network Error\") {\n          // bad network connection\n          setPromptBody(\"Please check your network connection and try again.\");\n          setShow(true);\n          setLoading(false);\n        }\n      }\n    }\n  };\n\n  return (\n    <Layout>\n      <Head>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"/auth.css\" />\n      </Head>\n      <div\n        style={{\n          textAlign: \"center\",\n        }}\n      >\n        <div>\n          <img src=\"/images/Logo.png\" />\n        </div>\n        <div>\n          <b>Make the most out of your business</b>\n        </div>\n        <div>\n          Already on Market Circle?{\" \"}\n          <Link href=\"/auth/login\">\n            <a>\n              <b>Log in</b>\n            </a>\n          </Link>\n        </div>\n      </div>{\" \"}\n      <div className=\"row\">\n        <Form\n          noValidate\n          validated={validated}\n          onSubmit={handleSubmit}\n          style={{ width: \"100%\", padding: 40 }}\n        >\n          {/* <div className=\"form-group\">\n            <label>First Name</label>\n            <input\n              type=\"text\"\n              id=\"signup_firstname\"\n              className=\"form-control\"\n              placeholder=\"Please enter your first name...\"\n              defaultValue={firstName}\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Last Name</label>\n            <input\n              type=\"text\"\n              id=\"signup_lastname\"\n              className=\"form-control\"\n              placeholder=\"Please enter your last name...\"\n              defaultValue={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n            />\n          </div> */}\n          <div className=\"form-group\">\n            <label>Email</label>\n            <input\n              type=\"text\"\n              id=\"signup_email\"\n              className=\"form-control\"\n              placeholder=\"Please enter a valid email..\"\n              required\n              defaultValue={email}\n              onChange={validateEmail}\n            />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              {emailValidity}\n            </small>\n            <div className=\"invalid-feedback\">Please enter valid email.</div>\n          </div>\n          {/* <div className=\"form-group\">\n            <label>Phone Number</label>\n            <input\n              type=\"text\"\n              id=\"signup_phonenumber\"\n              className=\"form-control\"\n              placeholder=\"Please enter your phone number\"\n              defaultValue={phoneNumber}\n              onChange={validatePhone}\n            />\n            <small id=\"phoneHelp\" className=\"form-text text-muted\">\n              {phoneValidity}\n            </small>\n          </div> */}\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              className=\"form-control\"\n              id=\"signup_password\"\n              type={passwordShown ? \"text\" : \"password\"}\n              placeholder=\"Password must be atleast 8 characters long.\"\n              required\n              defaultValue={password}\n              onChange={validatePassword}\n            />\n            <i onClick={togglePasswordVisiblity}>{eye}</i>\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              {passwordFieldValidity}\n            </small>\n            {/* <Form.Control.Feedback type=\"invalid\">\n                  Please enter a valid password.\n                </Form.Control.Feedback> */}\n          </div>\n          <div className=\"form-group\">\n            <label>Confirm Password</label>\n            <input\n              id=\"signup_confirm_password\"\n              className=\"form-control\"\n              type=\"password\"\n              placeholder=\"Password must be atleast 8 characters long.\"\n              required\n              // defaultValue={confirmPassword}\n              onChange={confirmPasswordMatch}\n            />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              {confirmPassword}\n            </small>\n          </div>\n\n          <div className=\"mb-3 text-center\">\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                id=\"inline-radio-1\"\n                name=\"radioButton\"\n                checked={userType === \"Organization\"}\n                value=\"Organization\"\n                onChange={(e) => setUserType(e.target.value)}\n              />\n              <label className=\"form-check-label\" htmlFor=\"inline-radio-1\">\n                Organization\n              </label>\n            </div>\n            {/* custom-control custom-radio custom-control-inline */}\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                id=\"inline-radio-2\"\n                name=\"radioButton\"\n                // checked={userType === \"Individual\"}\n                value=\"Individual\"\n                onChange={(e) => setUserType(e.target.value)}\n              />\n              <label className=\"form-check-label\" htmlFor=\"inline-radio-2\">\n                Individual\n              </label>\n            </div>\n          </div>\n          <button\n            id=\"signup_button\"\n            className=\"btn btn-primary btn-lg btn-block\"\n            type=\"submit\"\n          >\n            {loading ? loader() : null}\n            Signup\n          </button>\n        </Form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}