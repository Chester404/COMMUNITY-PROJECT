{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport Layout from \"../../components/Layout\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\nimport { Auth } from \"../../lib/endpoints\";\n\nconst Loader = () => __jsx(\"span\", {\n  className: \"spinner-border spinner-border-sm\",\n  role: \"status\",\n  \"aria-hidden\": \"true\",\n  style: {\n    width: \"1.5rem\",\n    height: \"1.5rem\"\n  }\n});\n\nconst Login = () => {\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: isRegistered,\n    1: setIsRegistered\n  } = useState(null);\n  const {\n    0: isInputValid,\n    1: setIsInputValid\n  } = useState(null);\n  const {\n    0: isLoggedIn,\n    1: setIsLoggedIn\n  } = useState(null);\n  const {\n    0: promptBody,\n    1: setPromptBody\n  } = useState(\"\");\n  const {\n    0: linkTo,\n    1: setLinkTo\n  } = useState(null);\n  const {\n    0: linkText,\n    1: setLinkText\n  } = useState(null);\n  const {\n    0: authentication_property,\n    1: setaAthenticationProperty\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: status,\n    1: setStatus\n  } = useState(\"\");\n  const {\n    0: statusColor,\n    1: setStatusColor\n  } = useState(\"blue\");\n  const router = useRouter();\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    setStatusColor(\"blue\");\n    setStatus(\"Please wait...\");\n\n    try {\n      const result = await new Auth().login(authentication_property, password);\n\n      if (result.status === 200) {\n        setLoading(false);\n        console.log(\"RESULT:\", result);\n        setStatusColor(\"blue\");\n        setStatus(\"Authentication success\");\n        setTimeout(() => {\n          // go to landing page\n          window.localStorage.setItem(\"cp-a\", JSON.stringify(result.data));\n          router.push(\"/jobs\"); //   setPromptBody(\"Replace this prompt with landing page\");\n          //   setShow(true);\n          //   setLoading(false);\n        }, 250);\n      }\n    } catch (err) {\n      console.log(err.message);\n\n      if (err.message === \"Request failed with status code 401\") {\n        // bad credentials\n        console.log(\"BAD CREDENTIALS\");\n        setStatusColor(\"red\");\n        setStatus(\"Please check your credentials and try again.\"); // setPromptBody(\"Please check your credentials and try again.\");\n\n        setLinkTo(\"signup\");\n        setLinkText(\"Signup\");\n        setShow(true);\n        setLoading(false);\n      } else if (err.message === \"Request failed with status code 404\") {\n        // bad endpoint\n        setStatusColor(\"red\");\n        setStatus(\"An error occured. Contact systems admin\");\n      } else if (err.message === \"Network Error\") {\n        // bad network connection\n        setStatusColor(\"red\");\n        setStatus(\"Please check your network connection and try again.\"); // setPromptBody(\"Please check your network connection and try again.\");\n        // setShow(true);\n\n        setLoading(false);\n      }\n\n      setTimeout(() => {\n        setStatus(\"\");\n      }, 3500);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Layout, null, __jsx(Head, null, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"/auth.css\"\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    }\n  }, __jsx(\"div\", null, __jsx(\"h3\", null, __jsx(\"b\", null, \"Login\"))), __jsx(\"br\", null)), \" \", __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"form\", {\n    style: {\n      width: \"100%\"\n    },\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: \"form-group col-12\"\n  }, __jsx(\"label\", {\n    htmlFor: \"email\"\n  }, \"Email address / Phone Number\"), __jsx(\"input\", {\n    type: \"email\",\n    className: \"form-control cinput\",\n    id: \"email\",\n    \"aria-describedby\": \"emailHelp\",\n    placeholder: \"Enter email or Phone number\",\n    value: authentication_property,\n    onChange: e => setaAthenticationProperty(e.target.value)\n  })), __jsx(\"div\", {\n    className: \"form-group col-12\"\n  }, __jsx(\"label\", {\n    htmlFor: \"exampleInputPassword1\"\n  }, \"Password\"), __jsx(\"input\", {\n    type: \"password\",\n    className: \"form-control cinput\",\n    id: \"password\",\n    placeholder: \"Password\",\n    \"data-toggle\": \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value)\n  })), __jsx(\"div\", {\n    className: \"form-group col-12\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block submitbutton\",\n    id: \"submitButton\"\n  }, \"Login\")), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      color: statusColor\n    }\n  }, \"\\xA0\", status), __jsx(\"br\", null), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      fontWeight: \"bolder\"\n    }\n  }, __jsx(\"a\", null, \"Forgotten Password?\"), __jsx(\"br\", null), \"Don't have an account?\", __jsx(Link, {\n    href: \"/auth/signup\"\n  }, __jsx(\"a\", {\n    id: \"signup\"\n  }, \"Sign Up\")))))));\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}