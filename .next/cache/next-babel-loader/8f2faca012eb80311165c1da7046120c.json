{"ast":null,"code":"var _jsxFileName = \"/home/james/Documents/dev/cp-fe/pages/auth/signup.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport Layout from \"../../components/Layout\";\nimport Link from \"next/link\";\nimport Form from \"react-bootstrap/Form\"; // import Button from \"react-bootstrap/Button\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\n\nconst eye = __jsx(FontAwesomeIcon, {\n  icon: faEye,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 13\n  }\n}); // import styles from \"./styles.module.css\";\n\n\nimport emailValidation from \"../../utils/emailValidation\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nconst Signup = () => {\n  let data;\n  const {\n    0: validated,\n    1: setValidated\n  } = useState(false);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\"); // const [phoneNumber, setPhoneNumber] = useState(\"\");\n\n  const {\n    0: emailValidity,\n    1: setEmailValidity\n  } = useState(\"invalid\"); // const [phoneValidity, setPhoneValidity] = useState(\"invalid\");\n\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState(\"mismatch\");\n  const {\n    0: passwordFieldValidity,\n    1: setPasswordFieldValidity\n  } = useState(\"invalid\");\n  const {\n    0: userType,\n    1: setUserType\n  } = useState(\"Organization\");\n  const {\n    0: isSent,\n    1: setIsSent\n  } = useState(false);\n  const {\n    0: passwordShown,\n    1: setPasswordShown\n  } = useState(false);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false); // const [userName, setUserName] = useState(\"\");\n  // const [firstName, setFirstName] = useState(\"\");\n  // const [lastName, setLastName] = useState(\"\");\n\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: promptBody,\n    1: setPromptBody\n  } = useState(\"\");\n  const {\n    0: linkTo,\n    1: setLinkTo\n  } = useState(null);\n  const {\n    0: linkText,\n    1: setLinkText\n  } = useState(null);\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false); // Toggle Password Visibility\n\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const loader = () => __jsx(\"span\", {\n    className: \"spinner-border spinner-border-sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    style: {\n      width: \"1.5rem\",\n      height: \"1.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }); // Email Phone Validation\n\n\n  const validateEmail = e => {\n    if (emailValidation(e.target.value)) {\n      setEmail(e.target.value);\n      setEmailValidity(\"valid\");\n    } else {\n      setEmailValidity(\"invalid\");\n    }\n  }; // const validatePhone = (e) => {\n  //   if (phoneValidation(e.target.value)) {\n  //     setPhoneNumber(e.target.value);\n  //     setPhoneValidity(\"valid\");\n  //   } else {\n  //     setPhoneValidity(\"invalid\");\n  //   }\n  // };\n  // Password Validation\n\n\n  const validatePassword = e => {\n    if (e.target.value.match(/[a-z]/g) && e.target.value.match(/[A-Z]/g) && e.target.value.match(/[0-9]/g) && e.target.value.match(/[^a-zA-Z\\d]/g) && e.target.value.length >= 8) {\n      // res = \"TRUE\";\n      setPassword(e.target.value);\n      setPasswordFieldValidity(\"valid\");\n    } // return true\n    // set field to invalid\n    else {\n        // console.log(\"invalid password\")\n        setPasswordFieldValidity(\"invalid\");\n      }\n  };\n\n  const confirmPasswordMatch = e => {\n    if (e.target.value === password) {\n      setConfirmPassword(\"match\"); // data.first_name = firstName\n      // data.last_name = lastName\n      // data.email = email\n      // data.password = password\n      // data.phone_number = phoneNumber\n      // data.user_type = userType\n    } else {\n      setConfirmPassword(\"mismatch\");\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      setPromptBody(\"Invalid data input.\");\n      event.stopPropagation();\n      return;\n    }\n\n    console.log(\"Here\");\n\n    if (email && password && confirmPassword === \"match\") {\n      setLoading(true);\n\n      try {\n        const result = await axios.post(\"http://51.116.114.155:8080/auth/registration/\", {\n          email: email,\n          password: password\n        });\n\n        if (result) {\n          setLoading(false);\n          console.log(\"RESULT:\", result);\n\n          if (result.status === 200 || result.statusText === \"Created\") {\n            // go to landing page\n            setPromptBody(\"A confirmation has been sent to your email. Please retrieve the code and confirm acount\");\n            setLinkTo(\"confirmaccount\");\n            setLinkText(\"Confirm Account\");\n            setShow(true);\n            setLoading(false);\n          }\n        }\n      } catch (err) {\n        console.log(err.message);\n\n        if (err.message === \"Request failed with status code 400\") {\n          setPromptBody(\"User with this email already exists\");\n          setLinkText(null);\n          setLinkTo(null);\n          setShow(true);\n          setLoading(false);\n        } else if (err.message === \"Request failed with status code 404\") {// bad endpoint\n        } else if (err.message === \"Network Error\") {\n          // bad network connection\n          setPromptBody(\"Please check your network connection and try again.\");\n          setShow(true);\n          setLoading(false);\n        }\n      }\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"/auth.css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/Logo.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, \"Make the most out of your business\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, \"Already on Market Circle?\", \" \", __jsx(Link, {\n    href: \"/auth/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"Log in\"))))), \" \", __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    style: {\n      width: \"100%\",\n      padding: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"signup_email\",\n    className: \"form-control\",\n    placeholder: \"Please enter a valid email..\",\n    required: true,\n    defaultValue: email,\n    onChange: validateEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, emailValidity), __jsx(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, \"Please enter valid email.\")), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    className: \"form-control\",\n    id: \"signup_password\",\n    type: passwordShown ? \"text\" : \"password\",\n    placeholder: \"Password must be atleast 8 characters long.\",\n    required: true,\n    defaultValue: password,\n    onChange: validatePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }), __jsx(\"i\", {\n    onClick: togglePasswordVisiblity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, eye), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, passwordFieldValidity)), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, \"Confirm Password\"), __jsx(\"input\", {\n    id: \"signup_confirm_password\",\n    className: \"form-control\",\n    type: \"password\",\n    placeholder: \"Password must be atleast 8 characters long.\",\n    required: true // defaultValue={confirmPassword}\n    ,\n    onChange: confirmPasswordMatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, confirmPassword)), __jsx(\"div\", {\n    className: \"mb-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    id: \"inline-radio-1\",\n    name: \"radioButton\",\n    checked: userType === \"Organization\",\n    value: \"Organization\",\n    onChange: e => setUserType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }), __jsx(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"inline-radio-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, \"Organization\")), __jsx(\"div\", {\n    className: \"form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    id: \"inline-radio-2\",\n    name: \"radioButton\" // checked={userType === \"Individual\"}\n    ,\n    value: \"Individual\",\n    onChange: e => setUserType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }), __jsx(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"inline-radio-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }, \"Individual\"))), __jsx(\"button\", {\n    id: \"signup_button\",\n    className: \"btn btn-primary btn-lg btn-block\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }, loading ? loader() : null, \"Signup\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/home/james/Documents/dev/cp-fe/pages/auth/signup.tsx"],"names":["Head","Layout","Link","Form","FontAwesomeIcon","faEye","eye","emailValidation","axios","useState","Signup","data","validated","setValidated","email","setEmail","emailValidity","setEmailValidity","password","setPassword","confirmPassword","setConfirmPassword","passwordFieldValidity","setPasswordFieldValidity","userType","setUserType","isSent","setIsSent","passwordShown","setPasswordShown","show","setShow","loading","setLoading","promptBody","setPromptBody","linkTo","setLinkTo","linkText","setLinkText","handleShow","handleClose","togglePasswordVisiblity","loader","width","height","validateEmail","e","target","value","validatePassword","match","length","confirmPasswordMatch","handleSubmit","event","preventDefault","form","currentTarget","checkValidity","stopPropagation","console","log","result","post","status","statusText","err","message","textAlign","padding"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport Layout from \"../../components/Layout\";\nimport Link from \"next/link\";\nimport Form from \"react-bootstrap/Form\";\n// import Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nconst eye = <FontAwesomeIcon icon={faEye} />;\n// import styles from \"./styles.module.css\";\nimport emailValidation from \"../../utils/emailValidation\";\nimport phoneValidation from \"../../utils/phoneValidation\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nconst Signup = () => {\n  let data: any;\n  const [validated, setValidated] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  // const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [emailValidity, setEmailValidity] = useState(\"invalid\");\n  // const [phoneValidity, setPhoneValidity] = useState(\"invalid\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"mismatch\");\n  const [passwordFieldValidity, setPasswordFieldValidity] = useState(\"invalid\");\n  const [userType, setUserType] = useState(\"Organization\");\n  const [isSent, setIsSent] = useState(false);\n  const [passwordShown, setPasswordShown] = useState(false);\n  const [show, setShow] = useState(false);\n  // const [userName, setUserName] = useState(\"\");\n  // const [firstName, setFirstName] = useState(\"\");\n  // const [lastName, setLastName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [promptBody, setPromptBody] = useState(\"\");\n  const [linkTo, setLinkTo] = useState(null);\n  const [linkText, setLinkText] = useState(null);\n\n  const handleShow = () => setShow(true);\n  const handleClose = () => setShow(false);\n\n  // Toggle Password Visibility\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const loader = () => (\n    <span\n      className=\"spinner-border spinner-border-sm\"\n      role=\"status\"\n      aria-hidden=\"true\"\n      style={{ width: \"1.5rem\", height: \"1.5rem\" }}\n    ></span>\n  );\n\n  // Email Phone Validation\n  const validateEmail = (e) => {\n    if (emailValidation(e.target.value)) {\n      setEmail(e.target.value);\n      setEmailValidity(\"valid\");\n    } else {\n      setEmailValidity(\"invalid\");\n    }\n  };\n\n  // const validatePhone = (e) => {\n  //   if (phoneValidation(e.target.value)) {\n  //     setPhoneNumber(e.target.value);\n  //     setPhoneValidity(\"valid\");\n  //   } else {\n  //     setPhoneValidity(\"invalid\");\n  //   }\n  // };\n\n  // Password Validation\n  const validatePassword = (e) => {\n    if (\n      e.target.value.match(/[a-z]/g) &&\n      e.target.value.match(/[A-Z]/g) &&\n      e.target.value.match(/[0-9]/g) &&\n      e.target.value.match(/[^a-zA-Z\\d]/g) &&\n      e.target.value.length >= 8\n    ) {\n      // res = \"TRUE\";\n      setPassword(e.target.value);\n      setPasswordFieldValidity(\"valid\");\n    }\n    // return true\n    // set field to invalid\n    else {\n      // console.log(\"invalid password\")\n      setPasswordFieldValidity(\"invalid\");\n    }\n  };\n\n  const confirmPasswordMatch = (e) => {\n    if (e.target.value === password) {\n      setConfirmPassword(\"match\");\n      // data.first_name = firstName\n      // data.last_name = lastName\n      // data.email = email\n      // data.password = password\n      // data.phone_number = phoneNumber\n      // data.user_type = userType\n    } else {\n      setConfirmPassword(\"mismatch\");\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      setPromptBody(\"Invalid data input.\");\n      event.stopPropagation();\n      return;\n    }\n    console.log(\"Here\");\n    if (email && password && confirmPassword === \"match\") {\n      setLoading(true);\n      try {\n        const result = await axios.post(\n          \"http://51.116.114.155:8080/auth/registration/\",\n          {\n            email: email,\n            password: password,\n          }\n        );\n\n        if (result) {\n          setLoading(false);\n          console.log(\"RESULT:\", result);\n          if (result.status === 200 || result.statusText === \"Created\") {\n            // go to landing page\n            setPromptBody(\n              \"A confirmation has been sent to your email. Please retrieve the code and confirm acount\"\n            );\n            setLinkTo(\"confirmaccount\");\n            setLinkText(\"Confirm Account\");\n            setShow(true);\n            setLoading(false);\n          }\n        }\n      } catch (err) {\n        console.log(err.message);\n        if (err.message === \"Request failed with status code 400\") {\n          setPromptBody(\"User with this email already exists\");\n          setLinkText(null);\n          setLinkTo(null);\n          setShow(true);\n          setLoading(false);\n        } else if (err.message === \"Request failed with status code 404\") {\n          // bad endpoint\n        } else if (err.message === \"Network Error\") {\n          // bad network connection\n          setPromptBody(\"Please check your network connection and try again.\");\n          setShow(true);\n          setLoading(false);\n        }\n      }\n    }\n  };\n\n  return (\n    <Layout>\n      <Head>\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"/auth.css\" />\n      </Head>\n      <div\n        style={{\n          textAlign: \"center\",\n        }}\n      >\n        <div>\n          <img src=\"/images/Logo.png\" />\n        </div>\n        <div>\n          <b>Make the most out of your business</b>\n        </div>\n        <div>\n          Already on Market Circle?{\" \"}\n          <Link href=\"/auth/login\">\n            <a>\n              <b>Log in</b>\n            </a>\n          </Link>\n        </div>\n      </div>{\" \"}\n      <div className=\"row\">\n        <Form\n          noValidate\n          validated={validated}\n          onSubmit={handleSubmit}\n          style={{ width: \"100%\", padding: 40 }}\n        >\n          {/* <div className=\"form-group\">\n            <label>First Name</label>\n            <input\n              type=\"text\"\n              id=\"signup_firstname\"\n              className=\"form-control\"\n              placeholder=\"Please enter your first name...\"\n              defaultValue={firstName}\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Last Name</label>\n            <input\n              type=\"text\"\n              id=\"signup_lastname\"\n              className=\"form-control\"\n              placeholder=\"Please enter your last name...\"\n              defaultValue={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n            />\n          </div> */}\n          <div className=\"form-group\">\n            <label>Email</label>\n            <input\n              type=\"text\"\n              id=\"signup_email\"\n              className=\"form-control\"\n              placeholder=\"Please enter a valid email..\"\n              required\n              defaultValue={email}\n              onChange={validateEmail}\n            />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              {emailValidity}\n            </small>\n            <div className=\"invalid-feedback\">Please enter valid email.</div>\n          </div>\n          {/* <div className=\"form-group\">\n            <label>Phone Number</label>\n            <input\n              type=\"text\"\n              id=\"signup_phonenumber\"\n              className=\"form-control\"\n              placeholder=\"Please enter your phone number\"\n              defaultValue={phoneNumber}\n              onChange={validatePhone}\n            />\n            <small id=\"phoneHelp\" className=\"form-text text-muted\">\n              {phoneValidity}\n            </small>\n          </div> */}\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              className=\"form-control\"\n              id=\"signup_password\"\n              type={passwordShown ? \"text\" : \"password\"}\n              placeholder=\"Password must be atleast 8 characters long.\"\n              required\n              defaultValue={password}\n              onChange={validatePassword}\n            />\n            <i onClick={togglePasswordVisiblity}>{eye}</i>\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              {passwordFieldValidity}\n            </small>\n            {/* <Form.Control.Feedback type=\"invalid\">\n                  Please enter a valid password.\n                </Form.Control.Feedback> */}\n          </div>\n          <div className=\"form-group\">\n            <label>Confirm Password</label>\n            <input\n              id=\"signup_confirm_password\"\n              className=\"form-control\"\n              type=\"password\"\n              placeholder=\"Password must be atleast 8 characters long.\"\n              required\n              // defaultValue={confirmPassword}\n              onChange={confirmPasswordMatch}\n            />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              {confirmPassword}\n            </small>\n          </div>\n\n          <div className=\"mb-3 text-center\">\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                id=\"inline-radio-1\"\n                name=\"radioButton\"\n                checked={userType === \"Organization\"}\n                value=\"Organization\"\n                onChange={(e) => setUserType(e.target.value)}\n              />\n              <label className=\"form-check-label\" htmlFor=\"inline-radio-1\">\n                Organization\n              </label>\n            </div>\n            {/* custom-control custom-radio custom-control-inline */}\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                id=\"inline-radio-2\"\n                name=\"radioButton\"\n                // checked={userType === \"Individual\"}\n                value=\"Individual\"\n                onChange={(e) => setUserType(e.target.value)}\n              />\n              <label className=\"form-check-label\" htmlFor=\"inline-radio-2\">\n                Individual\n              </label>\n            </div>\n          </div>\n          <button\n            id=\"signup_button\"\n            className=\"btn btn-primary btn-lg btn-block\"\n            type=\"submit\"\n          >\n            {loading ? loader() : null}\n            Signup\n          </button>\n        </Form>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}