{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport Layout from \"../../components/Layout\";\nimport Link from \"next/link\";\nimport emailValidation from \"../../utils/emailValidation\";\nimport phoneValidation from \"../../utils/phoneValidation\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nconst Signup = () => {\n  let data;\n  const {\n    0: validated,\n    1: setValidated\n  } = useState(false);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: phoneNumber,\n    1: setPhoneNumber\n  } = useState(\"\");\n  const {\n    0: emailValidity,\n    1: setEmailValidity\n  } = useState(\"invalid\");\n  const {\n    0: phoneValidity,\n    1: setPhoneValidity\n  } = useState(\"invalid\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState(\"mismatch\");\n  const {\n    0: passwordFieldValidity,\n    1: setPasswordFieldValidity\n  } = useState(\"invalid\");\n  const {\n    0: userType,\n    1: setUserType\n  } = useState(\"Organization\");\n  const {\n    0: isSent,\n    1: setIsSent\n  } = useState(false);\n  const {\n    0: passwordShown,\n    1: setPasswordShown\n  } = useState(false);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: userName,\n    1: setUserName\n  } = useState(\"\");\n  const {\n    0: firstName,\n    1: setFirstName\n  } = useState(\"\");\n  const {\n    0: lastName,\n    1: setLastName\n  } = useState(\"\"); // const [loading, setLoading] = useState(false);\n  // const [promptBody, setPromptBody] = useState(\"\");\n  // const [linkTo, setLinkTo] = useState(null);\n  // const [linkText, setLinkText] = useState(null);\n\n  const {\n    0: statusColor,\n    1: setStatusColor\n  } = useState(\"blue\");\n  const {\n    0: status,\n    1: setStatus\n  } = useState(\"\");\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false); // Toggle Password Visibility\n\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const loader = () => __jsx(\"span\", {\n    className: \"spinner-border spinner-border-sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    style: {\n      width: \"1.5rem\",\n      height: \"1.5rem\"\n    }\n  }); // Email Phone Validation\n\n\n  const validateEmail = e => {\n    if (emailValidation(e.target.value)) {\n      setEmail(e.target.value);\n      setEmailValidity(\"valid\");\n    } else {\n      setEmailValidity(\"invalid\");\n    }\n  };\n\n  const validatePhone = e => {\n    if (phoneValidation(e.target.value)) {\n      setPhoneNumber(e.target.value);\n      setPhoneValidity(\"valid\");\n    } else {\n      setPhoneValidity(\"invalid\");\n    }\n  }; // Password Validation\n\n\n  const validatePassword = e => {\n    if (e.target.value.match(/[a-z]/g) && e.target.value.match(/[A-Z]/g) && e.target.value.match(/[0-9]/g) && e.target.value.match(/[^a-zA-Z\\d]/g) && e.target.value.length >= 8) {\n      // res = \"TRUE\";\n      setPassword(e.target.value);\n      setPasswordFieldValidity(\"valid\");\n    } // return true\n    // set field to invalid\n    else {\n        // console.log(\"invalid password\")\n        setPasswordFieldValidity(\"invalid\");\n      }\n  };\n\n  const confirmPasswordMatch = e => {\n    if (e.target.value === password) {\n      setConfirmPassword(\"match\"); // data.first_name = firstName\n      // data.last_name = lastName\n      // data.email = email\n      // data.password = password\n      // data.phone_number = phoneNumber\n      // data.user_type = userType\n    } else {\n      setConfirmPassword(\"mismatch\");\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault(); //   setLoading(true);\n    // const form = event.currentTarget;\n    // if (form.checkValidity() === false) {\n    //   event.stopPropagation();\n    // }\n\n    if (email && password === confirmPassword) {\n      setStatusColor(\"blue\");\n      setStatus(\"Please wait...\");\n\n      try {\n        const result = await axios.post(\"http://51.116.114.155:8080/auth/registration/\", {\n          email: email,\n          password: password,\n          first_name: firstName,\n          last_name: lastName,\n          phone_number: phoneNumber\n        });\n\n        if (result) {\n          // setLoading(false);\n          console.log(\"RESULT:\", result);\n\n          if (result.status === 200 || result.statusText === \"Created\") {\n            // go to landing page\n            setStatusColor(\"blue\");\n            setStatus(\"A confirmation has been sent to your email. Please retrieve the code and confirm acount\"); //   setPromptBody(\n            //     \"A confirmation has been sent to your email. Please retrieve the code and confirm acount\"\n            //   );\n            //   setLinkTo(\"confirmaccount\");\n            //   setLinkText(\"Confirm Account\");\n            //   setShow(true);\n            //   setLoading(false);\n          }\n        }\n      } catch (err) {\n        console.log(err.message);\n\n        if (err.message === \"Request failed with status code 400\") {\n          // setPromptBody(\"User with this email already exists\");\n          // setLinkText(null);\n          // setLinkTo(null);\n          // setShow(true);\n          // setLoading(false);\n          setStatusColor(\"red\");\n          setStatus(\"User with this email already exists\");\n        } else if (err.message === \"Request failed with status code 404\") {\n          // bad endpoint\n          setStatusColor(\"red\");\n          setStatus(\"An error occured\");\n        } else if (err.message === \"Network Error\") {\n          setStatusColor(\"red\");\n          setStatus(\"Please check your network connection and try again.\"); // bad network connection\n          // setPromptBody(\n          //   \"Please check your network connection and try again.\"\n          // );\n          // setShow(true);\n          // setLoading(false);\n        }\n      }\n    } else {\n      setStatusColor(\"red\");\n      setStatus(\"Password mismatch\");\n    }\n  };\n\n  return __jsx(Layout, null, __jsx(Head, null, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"/auth.css\"\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    }\n  }, __jsx(\"div\", null, __jsx(\"img\", {\n    src: \"/images/Logo.png\"\n  })), __jsx(\"div\", null, __jsx(\"b\", null, \"Make the most out of your business\")), __jsx(\"div\", null, \"Already on Market Circle?\", \" \", __jsx(Link, {\n    href: \"/auth/login\"\n  }, __jsx(\"a\", null, __jsx(\"b\", null, \"Log in\"))))), \" \", __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"form\", {\n    style: {\n      width: \"100%\"\n    },\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: \"form-group col-12\"\n  }, __jsx(\"label\", {\n    htmlFor: \"email\"\n  }, \"Email address / Phone\"), __jsx(\"input\", {\n    type: \"email\",\n    className: \"form-control cinput\",\n    id: \"email\",\n    \"aria-describedby\": \"emailHelp\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: e => setEmail(e.target.value)\n  })), __jsx(\"div\", {\n    className: \"form-group col-12\"\n  }, __jsx(\"label\", {\n    htmlFor: \"password\"\n  }, \"Password\"), __jsx(\"input\", {\n    type: \"password\",\n    className: \"form-control cinput\",\n    id: \"password\",\n    placeholder: \"Password\",\n    \"data-toggle\": \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value)\n  })), __jsx(\"div\", {\n    className: \"form-group col-12\"\n  }, __jsx(\"label\", {\n    htmlFor: \"confirm_password\"\n  }, \"Confirm Password\"), __jsx(\"input\", {\n    type: \"password\",\n    className: \"form-control cinput\",\n    id: \"confirm_password\",\n    placeholder: \"Password\",\n    \"data-toggle\": \"password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value)\n  })), __jsx(\"div\", {\n    className: \"form-group col-12\"\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    id: \"organization\",\n    name: \"account_type\",\n    value: \"organization\"\n  }), \" \", __jsx(\"label\", {\n    htmlFor: \"organization\"\n  }, \"Organization\"), \" \", __jsx(\"input\", {\n    type: \"radio\",\n    id: \"individual\",\n    name: \"account_type\",\n    value: \"individual\"\n  }), \" \", __jsx(\"label\", {\n    htmlFor: \"individual\"\n  }, \"Individual\")), __jsx(\"div\", {\n    className: \"form-group col-12\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block submitbutton\"\n  }, \"Sign Up\")), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      color: statusColor\n    }\n  }, \"\\xA0\", status), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    }\n  }, \"By clicking Sing up, you agree to the Market Circle\", __jsx(\"br\", null), __jsx(\"b\", null, __jsx(\"a\", {\n    href: \"\"\n  }, \"User Agreement,\"), __jsx(\"a\", {\n    href: \"\"\n  }, \"Privacy Policy\")), \" \", \"and\", \" \", __jsx(\"b\", null, __jsx(\"a\", {\n    href: \"\"\n  }, \"Cookie Policy\"))))));\n};\n\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}